#Область ОписаниеПеременных
	
&НаКлиенте
Перем ОбновитьИнтерфейс;

#КонецОбласти 


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли; 
	
	ТокенАвторизацииДляВходящихЗапросов = дсфОбщегоНазначенияКлиентСервер.ТокенАвторизацииДляВходящихЗапросов();
		
	ТокенАвторизацииДляВходящихЗапросов =
					?(ЗначениеЗаполнено(ТокенАвторизацииДляВходящихЗапросов), ЭтотОбъект.УникальныйИдентификатор, "");

	// Обновление состояния элементов.
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	#Если Не ВебКлиент Тогда
	ОбновитьИнтерфейсПрограммы();
	#КонецЕсли	

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы
&НаКлиенте
Процедура ТокенАвторизацииДляВходящихЗапросовПриИзменении(Элемент)
	ТокенАвторизацииДляВходящихЗапросовИзменен = Истина;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ЗаписатьТокенАвторизацииДляВходящихЗапросов(Команда)
	Если ТокенАвторизацииДляВходящихЗапросовИзменен Тогда
		дсфОбщегоНазначенияКлиентСервер.ЗаписатьТокенАвторизацииДляВходящихЗапросов(ТокенАвторизацииДляВходящихЗапросов); 
		ТокенАвторизацииДляВходящихЗапросов = 
			?(ЗначениеЗаполнено(ТокенАвторизацииДляВходящихЗапросов), ЭтотОбъект.УникальныйИдентификатор, "");
		
		ТокенАвторизацииДляВходящихЗапросовИзменен = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Процедура УстановитьДоступность(РеквизитПутьКДанным = "")
		
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы()
	
	Если ОбновитьИнтерфейс = Истина Тогда
		ОбновитьИнтерфейс = Ложь;
		дсфОбщегоНазначенияКлиент.ОбновитьИнтерфейсПрограммы();
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти
