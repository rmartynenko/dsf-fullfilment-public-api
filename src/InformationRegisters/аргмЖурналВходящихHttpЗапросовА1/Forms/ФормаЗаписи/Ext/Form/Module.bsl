
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Параметры.Ключ.Пустой() Тогда
		ФормаЗаписиПриСозданииНаСервере();
	
		ЗаполнитьДеревьяОтображенияJson();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ДеревоРазвернуть(Элементы.ДеревоВходящийJson, ДеревоВходящийJson,, Ложь);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиКомандФормы
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ДеревоРазвернуть(ДеревоФормы,
						ДанныеФормы,
						ЭлементДеревоЗначений = Неопределено,
						РазвернутьПодчиненные = Истина)
						
	Если ТипЗнч(ЭлементДеревоЗначений)=Тип("ДанныеФормыЭлементДерева") Тогда 
		ДеревоФормы.Развернуть(ЭлементДеревоЗначений.ПолучитьИдентификатор(), РазвернутьПодчиненные);
		
		Возврат Истина;

	КонецЕсли;
	
	Для Каждого СтрокаДерева Из ДанныеФормы.ПолучитьЭлементы() Цикл
		ДеревоФормы.Развернуть(СтрокаДерева.ПолучитьИдентификатор(), РазвернутьПодчиненные);
		
	КонецЦикла;
	
	Возврат Истина;

КонецФункции

&НаСервере
Процедура ФормаЗаписиПриСозданииНаСервере()
	ЗаписьОбъект = РеквизитФормыВЗначение("Запись");

	ИдентификаторЗапросаСтрокой = XMLСтрока(ЗаписьОбъект.ИдентификаторЗапроса);
	
	// запрос
	ПрочитанныеДанныеЗапроса = ЗаписьОбъект.Запрос.Получить();
	Тело = ПолучитьСтрокуИзДвоичныхДанных(ПрочитанныеДанныеЗапроса.Тело);
	
	Попытка
		ВходящийJson = аргмКоннекторHttpA1.JsonВОбъект(Тело);
		
	Исключение
		ВходящийJson = Неопределено;
		
	КонецПопытки;
	
	Если ВходящийJson = Неопределено Тогда	
		ТекстВходящийXML = Тело;
		ТекстВходящийJson = ""
		
	Иначе
		ТекстВходящийJson = аргмКоннекторHttpA1.ОбъектВJson(ВходящийJson);
		ТекстВходящийXML = ""

	КонецЕсли;
		
	// скрытие служебной информации
	ПрочитанныеДанныеЗапроса.Тело = Тело; // двоичные данные заменяем на строковое представление
	ТекстДанныеЗапроса = аргмКоннекторHttpA1.ОбъектВJson(ПрочитанныеДанныеЗапроса);
	ТекстДанныеЗапроса = аргмЛогированиеHttpA1.МаскированныйРезультат(ТекстДанныеЗапроса);
	
	// ответ
	ПрочитанныеДанныеОтвета = ЗаписьОбъект.Ответ.Получить();
	ТекстДанныеОтвета = аргмКоннекторHttpA1.ОбъектВJson(ПрочитанныеДанныеОтвета);
	ТекстДанныеОтвета = аргмЛогированиеHttpA1.МаскированныйРезультат(ТекстДанныеОтвета);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревьяОтображенияJson()

	Если ЗначениеЗаполнено(ТекстВходящийJson) Тогда
	
		ДеревоВходящийJson.ПолучитьЭлементы().Очистить(); 
		
		ДеревоДляЗаполнения = РеквизитФормыВЗначение("ДеревоВходящийJson");

		КорневаяСтрока = ДеревоДляЗаполнения.Строки.Добавить();
		КорневаяСтрока.Имя="Корень";
		
		ВходящийJson = аргмКоннекторHttpA1.JsonВОбъект(ТекстВходящийJson);

		ПрочитатьВеткуJsonНаСервере(ВходящийJson, КорневаяСтрока);

		ЗначениеВРеквизитФормы(ДеревоДляЗаполнения, "ДеревоВходящийJson");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПрочитатьВеткуJsonНаСервере(ДанныеJson, СтрокаДереваЗначений)
	
	ТипДанных = ТипЗнч(ДанныеJson);
	
	Если ТипДанных = Тип("Соответствие") Или ТипДанных = Тип("Структура") Тогда
		СтрокаДереваЗначений.Тип = ?(ТипДанных = Тип("Соответствие"), "Соответствие", "Структура");
		
		Для Каждого КлючИЗначение Из ДанныеJson Цикл
			НоваяСтрокаДерева = СтрокаДереваЗначений.Строки.Добавить();
			НоваяСтрокаДерева.Имя = КлючИЗначение.Ключ;
			ПрочитатьВеткуJsonНаСервере(КлючИЗначение.Значение, НоваяСтрокаДерева);
			
		КонецЦикла;
		
		Возврат Истина;
		
	ИначеЕсли ТипДанных=Тип("Массив") Тогда
		СтрокаДереваЗначений.Тип = "Массив";
		
		НомерЭлементаМассива = 0;
		Для Каждого ЭлементМассива Из ДанныеJson Цикл
			НоваяСтрокаДерева = СтрокаДереваЗначений.Строки.Добавить();
			НоваяСтрокаДерева.Имя = СтрШаблон("[%1]", НомерЭлементаМассива);
			ПрочитатьВеткуJsonНаСервере(ЭлементМассива, НоваяСтрокаДерева);
			
			НомерЭлементаМассива = НомерЭлементаМассива + 1;
			
			// ограничим число элементов массива для вывода в дерево
			Если НомерЭлементаМассива > 50 Тогда
				НоваяСтрокаДерева = СтрокаДереваЗначений.Строки.Добавить();
				НоваяСтрокаДерева.Имя = СтрШаблон("[%1]", "...");

				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Возврат Истина;
		
	КонецЕсли;
	
	Если ТипДанных = Тип("Число") Тогда 
		СтрокаДереваЗначений.Тип = "Число";
		СтрокаДереваЗначений.Значение = ДанныеJson;
		
	ИначеЕсли ТипДанных = Тип("Строка") Тогда 
		СтрокаДереваЗначений.Тип = "Строка"; 
		СтрокаДереваЗначений.Значение = ДанныеJson;
		
	ИначеЕсли ТипДанных = Тип("Булево") Тогда 
		СтрокаДереваЗначений.Тип = "Булево";
		СтрокаДереваЗначений.Значение = ДанныеJson;
		
	ИначеЕсли ТипДанных = Тип("Неопределено") Тогда
		СтрокаДереваЗначений.Тип = "Неопределено";
		СтрокаДереваЗначений.Значение = Неопределено;
		
	Иначе
		Сообщить("Неизвестный тип: " + ТипДанных + ", будет приведен к строке!"); 
		СтрокаДереваЗначений.Тип = "Строка"; 
		СтрокаДереваЗначений.Значение = XMLСтрока(ДанныеJson);
		
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

#КонецОбласти
