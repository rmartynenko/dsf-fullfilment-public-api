#Область ПрограммныйИнтерфейс
Функция НовыйРезультатСозданияОбъекта() Экспорт
	Результат = Новый Структура;
	
	Результат.Вставить("ОбъектСоздан", Ложь);
	Результат.Вставить("Ссылка", Неопределено);
	Результат.Вставить("Ошибки", Новый Массив);
	Результат.Вставить("Сообщения", Новый Массив);
	
	Возврат Результат;
	
КонецФункции

Функция НовыйРезультатГрупповогоСозданияОбъектов() Экспорт
	Результат = Новый Структура;
	
	Результат.Вставить("ОбъектыСозданы", Ложь);
	Результат.Вставить("СписокОбъектов", Новый Массив);
	Результат.Вставить("Ошибки", Новый Массив);
	Результат.Вставить("Сообщения", Новый Массив);
	
	Возврат Результат;
	
КонецФункции

Функция РезультатСозданияПозицийНоменклатуры(СписокНоменклатуры,
											Поклажедатель = Неопределено,
											ГруппаНоменклатуры = Неопределено,
											ПрефиксКода = "") Экспорт
													
	Результат = НовыйРезультатГрупповогоСозданияОбъектов();
	
	ПараметрыСоздания = Новый Структура;
	ПараметрыСоздания.Вставить("ЗаполнятьРеквизитыЗначениямиПоУмолчанию", Истина);
	ПараметрыСоздания.Вставить("Поклажедатель", Поклажедатель);
	ПараметрыСоздания.Вставить("ГруппаНоменклатуры", ГруппаНоменклатуры);
	ПараметрыСоздания.Вставить("ПрефиксКода", ПрефиксКода);
	
	МаксимальноеЧислоОбрабатываемыхЭлементов = 50;
	
	ПорядковыйНомерЭлемента = 1;
	Для каждого ДанныеНоменклатуры Из СписокНоменклатуры["goods"] Цикл
		
		Если ПорядковыйНомерЭлемента <= МаксимальноеЧислоОбрабатываемыхЭлементов Тогда
			НоваяНоменклатура = дсфСозданиеИзменениеДанныхАпи.НоваяНоменклатура(ДанныеНоменклатуры,
																				ПараметрыСоздания,
																				Результат.Сообщения,
																				Результат.Ошибки);

			Если ЗначениеЗаполнено(НоваяНоменклатура) Тогда
				Результат.СписокОбъектов.Добавить(НоваяНоменклатура);
				
			КонецЕсли;

		Иначе
			ТекстПредупреждения = СтрШаблон("Элемент c sku %1 не обработан по причине превышения числа элементов в переданном массиве",
											ДанныеНоменклатуры["sku"]);
											
			Результат.Ошибки.Добавить(ТекстПредупреждения);

		КонецЕсли;
				
		ПорядковыйНомерЭлемента = ПорядковыйНомерЭлемента + 1;
		
	КонецЦикла;
	
	Если Результат.СписокОбъектов.Количество() > 0 Тогда
		Результат.ОбъектыСозданы = Истина;
		
	Иначе
		Результат.ОбъектыСозданы = Ложь;

	КонецЕсли;
	
	Возврат Результат;

КонецФункции

Функция РезультатСозданияКонтрагента(ДанныеКонтрагента, Поклажедатель = Неопределено) Экспорт

	Результат = НовыйРезультатСозданияОбъекта();
	
	ПараметрыСоздания = Новый Структура;
	ПараметрыСоздания.Вставить("ЗаполнятьРеквизитыЗначениямиПоУмолчанию", Истина);
	ПараметрыСоздания.Вставить("Поклажедатель", Поклажедатель);

	Контрагент = дсфСозданиеИзменениеДанныхАпи.НовыйКонтрагент(ДанныеКонтрагента,
																ПараметрыСоздания,
																Результат.Сообщения,
																Результат.Ошибки);
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		Результат.Ссылка = Контрагент;
		Результат.ОбъектСоздан = Истина;
		
	Иначе
		Результат.ОбъектСоздан = Ложь;

	КонецЕсли;

	Возврат Результат;

КонецФункции

Функция РезультатСозданияПланаОтгрузки(ДанныеПланаОтгрузки, Поклажедатель = Неопределено) Экспорт

	Результат = НовыйРезультатСозданияОбъекта();
	
	ПараметрыСоздания = Новый Структура;
	ПараметрыСоздания.Вставить("ЗаполнятьРеквизитыЗначениямиПоУмолчанию", Истина);
	ПараметрыСоздания.Вставить("Поклажедатель", Поклажедатель);

	ПланОтгрузки = дсфСозданиеИзменениеДанныхАпи.НовыйПланОтгрузки(ДанныеПланаОтгрузки,
																	ПараметрыСоздания,
																	Результат.Сообщения,
																	Результат.Ошибки);
	
	Если ЗначениеЗаполнено(ПланОтгрузки) Тогда
		Результат.Ссылка = ПланОтгрузки;
		Результат.ОбъектСоздан = Истина;
		
	Иначе
		Результат.ОбъектСоздан = Ложь;

	КонецЕсли;

	Возврат Результат;

КонецФункции


#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти