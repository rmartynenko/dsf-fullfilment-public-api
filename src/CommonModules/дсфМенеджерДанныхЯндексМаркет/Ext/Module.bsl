#Область ПрограммныйИнтерфейс

// Процедура - Создать изменить номенклатуру яндекс маркет
//
// Параметры:
//  ДанныеНоменклатуры	 - СписокXdto - 
//  Результат			 - Структура - см. dsf_ОбработкаЗапросовЯндексМаркет.НовыйРезультатОбработкиВходящегоЗапроса
//
Процедура СоздатьОбновитьНоменклатуруЯндексМаркет(ДанныеНоменклатуры, Результат) Экспорт
	
	// обработка

	// формирование Объекта xdto
	Результат["Данные"] = Неопределено;
	
	Для каждого ОписаниеТовара Из ДанныеНоменклатуры Цикл
		
		Ошибка = дсфОбработкаОшибокЯндексМаркет.НоваяОшибкаПриВыполненииЗапроса();
		
		Ошибка.code = 1000; 
		Ошибка.message = "Регистрация товара";
		Ошибка.description = ОписаниеТовара.name;
		
		Результат.Ошибки.Добавить(Ошибка);
		
	КонецЦикла;

КонецПроцедуры
	
Процедура СоздатьОбновитьЗаявкуНаПриемкуЯндексМаркет(ДанныеЗаявки, Результат) Экспорт
	
	ОписаниеЗаявки = дсфСозданиеОбновлениеДанныхЯндексМаркет.НовоеОписаниеЗаявкиНаПриемку();
	
	ОписаниеЗаявки.Дата = ТекущаяДатаСеанса();
	
	Интервал = дсфОбщегоНазначенияЯндексМаркет.ИнтервалДатИзСтроки(ДанныеЗаявки["interval"]);
	ОписаниеЗаявки.ПериодДоставкиНачало = Интервал["НачалоИнтервала"];
	ОписаниеЗаявки.ПериодДоставкиОкончание = Интервал["ОкончаниеИнтервала"];
	
	ИдентификаторРесурса = дсфОбменДаннымиXDTOЯндексМаркет.ИдентификаторРесурсаИзОбъектаXdto(ДанныеЗаявки["inboundId"]);
	ОписаниеЗаявки.ИдентификаторВнешний = ИдентификаторРесурса["yandexId"];
	ОписаниеЗаявки.Идентификатор = ИдентификаторРесурса["partnerId"];
	
	ОписаниеЗаявки.Комментарий = ДанныеЗаявки["comment"];
	ОписаниеЗаявки.ДанныеЗаявкиВходящие = дсфФормированиеОтветовЯндексМаркет.СодержимоеОтветаВСтрокуXML(ДанныеЗаявки);
	
	ОписаниеЗаявки.ДанныеСкладаЗначенияПолей = 
							дсфОбменДаннымиXDTOЯндексМаркет.ОбъектXDTOВJson(ДанныеЗаявки["logisticPoint"], Истина);

	ОписаниеЗаявки.ДанныеКурьераЗначенияПолей = 
							дсфОбменДаннымиXDTOЯндексМаркет.ОбъектXDTOВJson(ДанныеЗаявки["courier"], Истина);

	ОписаниеЗаявки.ДанныеОтправителяГрузаЗначенияПолей = 
							дсфОбменДаннымиXDTOЯндексМаркет.ОбъектXDTOВJson(ДанныеЗаявки["shipper"], Истина);

	ОписаниеЗаявки.ТипПриемки = дсфОбщегоНазначенияЯндексМаркет.ТипПриемкиПоЧисловомуКоду(ДанныеЗаявки["inboundType"]); 
	
	РезультатОбработкиЗаявки = дсфСозданиеОбновлениеДанныхЯндексМаркет.РезультатОбработкиЗаявкиНаПриемку();
	
	дсфСозданиеОбновлениеДанныхЯндексМаркет.СоздатьОбновитьЗаявкуНаПриемку(ОписаниеЗаявки, РезультатОбработкиЗаявки);
		
	ТипОбъекта = ФабрикаXDTO.Тип("http://www.dsf-yandex-market.kz", "ResourceId");
	ДанныеОтвета = ФабрикаXDTO.Создать(ТипОбъекта);
	
	ДанныеОтвета["yandexId"] = РезультатОбработкиЗаявки["ИдентификаторВнешний"];
	Если ЗначениеЗаполнено(РезультатОбработкиЗаявки["Идентификатор"]) Тогда
		ДанныеОтвета["partnerId"] = РезультатОбработкиЗаявки["Идентификатор"];
		
	КонецЕсли;

	Если Не РезультатОбработкиЗаявки.Успех Тогда
		Для каждого ТекОшибка Из РезультатОбработкиЗаявки.Ошибки Цикл
			
			НоваяОшибка = дсфОбработкаОшибокЯндексМаркет.НевозможноОбработатьЗапрос();
			НоваяОшибка.description = ТекОшибка;
			
			Результат.Ошибки.Добавить(НоваяОшибка);

		КонецЦикла;
		
	КонецЕсли;	

	// формирование Объекта xdto
	Результат["Данные"] = ДанныеОтвета;
	
	//Для каждого ОписаниеТовара Из ДанныеНоменклатуры Цикл
	//	
	//	Ошибка = dsf_ОбработкаОшибок.НоваяОшибкаПриВыполненииЗапросаЯндексМаркет();
	//	
	//	Ошибка.code = 1000; 
	//	Ошибка.message = "Регистрация товара";
	//	Ошибка.description = ОписаниеТовара.name;
	//	
	//	РезультатОбработки.Ошибки.Добавить(Ошибка);
	//КонецЦикла;

	//	//ПримерСтруктуры = dsf_ОбменДаннымиXDTOЯндексМаркет.ОбъектXDTOВСтруктуру(ОбъектXdto.request);
	//	//
	//	//Для каждого ОписаниеТовара Из ОбъектXdto.request["items"]["item"] Цикл
	//	//
	//	//	f = 2;	
	//	//
	//	//КонецЦикла;

КонецПроцедуры

Процедура СоздатьОбновитьРеестрПриемкиЯндексМаркет(ДанныеРеестра, Результат) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ОписаниеРеестра = дсфСозданиеОбновлениеДанныхЯндексМаркет.НовоеОписаниеРеестраПриемки();
	
	ОписаниеРеестра.ЗначенияПолей = дсфОбменДаннымиXDTOЯндексМаркет.ОбъектXDTOВJson(ДанныеРеестра, Истина);

	ДатаРеестра = дсфОбщегоНазначенияЯндексМаркет.ДатаИзСтроки(ДанныеРеестра["date"]);
	
	Если ЗначениеЗаполнено(ДатаРеестра) Тогда
		ОписаниеРеестра.Дата = ДатаРеестра;

	Иначе	
		ОписаниеРеестра.Дата = ТекущаяДатаСеанса();

	КонецЕсли;
	
	ИдентификаторРесурса = дсфОбменДаннымиXDTOЯндексМаркет.ИдентификаторРесурсаИзОбъектаXdto(ДанныеРеестра["registryId"]);
	ОписаниеРеестра.ИдентификаторВнешний = ИдентификаторРесурса["yandexId"];
	ОписаниеРеестра.Идентификатор = ИдентификаторРесурса["partnerId"];
	
	ИдентификаторЗаявки = дсфОбменДаннымиXDTOЯндексМаркет.ИдентификаторРесурсаИзОбъектаXdto(ДанныеРеестра["inboundId"]);
	ОписаниеРеестра.ИдентификаторЗаявкиНаПриемкуВнешний = ИдентификаторЗаявки["yandexId"];
	ОписаниеРеестра.ИдентификаторЗаявкиНаПриемку = ИдентификаторЗаявки["partnerId"];

	ОписаниеРеестра.ТипРеестра = дсфОбщегоНазначенияЯндексМаркет.ТипРеестраПоЧисловомуКоду(ДанныеРеестра["registryType"]);
	ОписаниеРеестра.ТипРеестраКод = ДанныеРеестра["registryType"];

	ОписаниеРеестра.Комментарий = ДанныеРеестра["comment"];
	
	// палеты
	ПалетыСписокXdto = ДанныеРеестра["pallets"]["pallet"];
	Для каждого ОписаниеПалеты Из ПалетыСписокXdto Цикл
		ОписаниеПалетыXdto = ОписаниеПалеты["unitInfo"];
		
		ОписаниеСтрокиГрузовогоМеста = 
						дсфСозданиеОбновлениеДанныхЯндексМаркет.НовоеОписаниеСтрокиПланаПоступленияГрузовогоМеста();
		
		ОписаниеСтрокиГрузовогоМеста["ТипМХ"] = дсфОбщегоНазначенияЯндексМаркет.ТипМестаХраненияДляПалетПоУмолчанию();
		ОписаниеСтрокиГрузовогоМеста["Количество"] = 1;
		
		ОписаниеРеестра.ГрузовыеМеста.Добавить(ОписаниеСтрокиГрузовогоМеста);
		
	КонецЦикла;
	
	// короба
	КоробаСписокXdto = ДанныеРеестра["boxes"]["box"];
	Для каждого ОписаниеКороба Из КоробаСписокXdto Цикл
		ОписаниеКоробаXdto = ОписаниеКороба["unitInfo"];
		
		ОписаниеСтрокиГрузовогоМеста = 
						дсфСозданиеОбновлениеДанныхЯндексМаркет.НовоеОписаниеСтрокиПланаПоступленияГрузовогоМеста();
		
		ОписаниеСтрокиГрузовогоМеста["ТипМХ"] = дсфОбщегоНазначенияЯндексМаркет.ТипМестаХраненияДляКоробовПоУмолчанию();
		ОписаниеСтрокиГрузовогоМеста["Количество"] = 1;
		
		ОписаниеРеестра.ГрузовыеМеста.Добавить(ОписаниеСтрокиГрузовогоМеста);
	
	КонецЦикла;
	
	// номенклатура
	ТоварыСписокXdto = ДанныеРеестра["items"]["item"];
	Для каждого ЭлементСпискаТоваров Из ТоварыСписокXdto Цикл
		
		ОписаниеТовара = дсфОбменДаннымиXDTOЯндексМаркет.ОписаниеЭлементаСпискаТоваровВРеестре(ЭлементСпискаТоваров);

		ОписаниеРеестра.Состав.Добавить(ОписаниеТовара);
	
	КонецЦикла;
	
	РезультатОбработкиРеестра = дсфСозданиеОбновлениеДанныхЯндексМаркет.РезультатОбработкиРеестраПриемки();

	дсфСозданиеОбновлениеДанныхЯндексМаркет.СоздатьОбновитьРеестрПриемки(ОписаниеРеестра, РезультатОбработкиРеестра);
	
	УстановитьПривилегированныйРежим(Ложь);

	ТипОбъекта = ФабрикаXDTO.Тип("http://www.dsf-yandex-market.kz", "ResourceId");
	ДанныеОтвета = ФабрикаXDTO.Создать(ТипОбъекта);
	
	ДанныеОтвета["yandexId"] = РезультатОбработкиРеестра["ИдентификаторВнешний"];
	Если ЗначениеЗаполнено(РезультатОбработкиРеестра["Идентификатор"]) Тогда
		ДанныеОтвета["partnerId"] = РезультатОбработкиРеестра["Идентификатор"];
		
	КонецЕсли;

	Если Не РезультатОбработкиРеестра.Успех Тогда
		Для каждого ТекОшибка Из РезультатОбработкиРеестра.Ошибки Цикл
			
			НоваяОшибка = дсфОбработкаОшибокЯндексМаркет.НевозможноОбработатьЗапрос();
			НоваяОшибка.description = ТекОшибка;
			
			Результат.Ошибки.Добавить(НоваяОшибка);

		КонецЦикла;
		
	КонецЕсли;	

	// формирование Объекта xdto
	Результат["Данные"] = ДанныеОтвета;

КонецПроцедуры

Процедура ПодготовитьСведенияОСтатусахЗаявокНаПриемку(ИдентификаторыЗаявокНаПриемку, Результат) Экспорт

	УстановитьПривилегированныйРежим(Истина); 
	
	ЗаявкиНаПриемку = Новый Массив;
	
	Для каждого ОписаниеЗаявки Из ИдентификаторыЗаявокНаПриемку Цикл
		
		ИдентификаторЗаявкиВнешний = ОписаниеЗаявки["yandexId"];
		ИдентификаторЗаявки = ОписаниеЗаявки["partnerId"];
		
		Заявка = 
			РегистрыСведений.дсфИдентификаторыЯндексМаркет.СсылкаНаОбъектПоПубличномуИдентификатору(ИдентификаторЗаявкиВнешний);
	
		Если Заявка = Неопределено Тогда
			ТекстОшибки = СтрШаблон("Заявка на приемку с yandexId %1 не была ранее зарегистрирована.", ИдентификаторЗаявкиВнешний);
			
			Ошибка = дсфОбработкаОшибокЯндексМаркет.ТипДанныхНеНайденОшибка();
			Ошибка.description = ТекстОшибки;

			Результат.Ошибки.Добавить(Ошибка);
		
		Иначе
			ЗаявкиНаПриемку.Добавить(Заявка);
			
		КонецЕсли;
	
	КонецЦикла;
	
	РезультатЗапросаСтатусов = дсфПолучениеСведенийЯндексМаркет.СведенияОСтатусахПриемок(ЗаявкиНаПриемку);
	
	Если РезультатЗапросаСтатусов.Успех Тогда
		
		ТипОбъекта = ФабрикаXDTO.Тип("http://www.dsf-yandex-market.kz", "InboundsStatus");
		ДанныеОтвета = ФабрикаXDTO.Создать(ТипОбъекта);
		
		ТипОбъектаЭлементСписка = ФабрикаXDTO.Тип("http://www.dsf-yandex-market.kz", "InboundStatus");
		ТипОбъектаИдентификаторПриемки = ФабрикаXDTO.Тип("http://www.dsf-yandex-market.kz", "ResourceId");

		Для каждого ОписаниеСтатуса Из РезультатЗапросаСтатусов["Статусы"] Цикл
			ЭлементСпискаСтатусов = ФабрикаXDTO.Создать(ТипОбъектаЭлементСписка);
			
			СведенияОбИдентификаторах = ФабрикаXDTO.Создать(ТипОбъектаИдентификаторПриемки);
			СведенияОбИдентификаторах["yandexId"] = ОписаниеСтатуса["ИдентификаторВнешний"];
			СведенияОбИдентификаторах["partnerId"] = ОписаниеСтатуса["ИдентификаторДокумента"];
			СведенияОбИдентификаторах["fulfillmentId"] = ОписаниеСтатуса["ИдентификаторСклада"];
			
			ЭлементСпискаСтатусов["inboundId"] = СведенияОбИдентификаторах;
			
			СтатусДокумента = ОписаниеСтатуса["Статус"];
			ЭлементСпискаСтатусов["statusCode"] = дсфСтатусыДокументовЯндексМаркет.КодСтатусаПриемкиПоСтатусуДокумента(СтатусДокумента);
			ЭлементСпискаСтатусов["date"] = XMLСтрока(ОписаниеСтатуса["ДатаИзменения"]);

			ДанныеОтвета["inboundStatus"].Добавить(ЭлементСпискаСтатусов);

		КонецЦикла;
	
	Иначе
		Для каждого ТекОшибка Из РезультатЗапросаСтатусов.Ошибки Цикл
			
			НоваяОшибка = дсфОбработкаОшибокЯндексМаркет.НевозможноОбработатьЗапрос();
			НоваяОшибка.description = ТекОшибка;
			
			Результат["Ошибки"].Добавить(НоваяОшибка);

		КонецЦикла;

	КонецЕсли;
	
	// формирование Объекта xdto
	Результат["Данные"] = ДанныеОтвета;

КонецПроцедуры

 Процедура ПодготовитьСведенияОДеталяхПриемки(ИдентификаторыЗаявкиНаПриемку, Результат) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	ИдентификаторЗаявкиВнешний = ИдентификаторыЗаявкиНаПриемку["yandexId"];
	ИдентификаторЗаявки = ИдентификаторыЗаявкиНаПриемку["partnerId"];
		
	Заявка = РегистрыСведений.дсфИдентификаторыЯндексМаркет.СсылкаНаОбъектПоПубличномуИдентификатору(ИдентификаторЗаявкиВнешний);
	
	Если Заявка = Неопределено Тогда
		ТекстОшибки = СтрШаблон("Заявка на приемку с yandexId %1 не была ранее зарегистрирована.", ИдентификаторЗаявкиВнешний);
		
		Ошибка = дсфОбработкаОшибокЯндексМаркет.ТипДанныхНеНайденОшибка();
		Ошибка.description = ТекстОшибки;

		Результат.Ошибки.Добавить(Ошибка);
		
		Возврат;
		
	КонецЕсли;
	
	РезультатЗапросаДеталейПриемки = дсфПолучениеСведенийЯндексМаркет.ДеталиПриемкиПоЗаявке(Заявка);
	
	ДанныеОтвета = Новый Структура;
	ДанныеОтвета.Вставить("inbound", Неопределено);
	ДанныеОтвета.Вставить("registries", Неопределено);
	
	Если РезультатЗапросаДеталейПриемки.Успех Тогда
		
		// заявка
		ТипОбъектаЗаявка = ФабрикаXDTO.Тип("http://www.dsf-yandex-market.kz", "Inbound");
		ТипОбъектаИдентификаторУниверсальный = ФабрикаXDTO.Тип("http://www.dsf-yandex-market.kz", "ResourceId");
		
		ДанныеЗаявки = ФабрикаXDTO.Создать(ТипОбъектаЗаявка);
			
		СведенияОбИдентификаторахЗаявки = ФабрикаXDTO.Создать(ТипОбъектаИдентификаторУниверсальный);
		СведенияОбИдентификаторахЗаявки["yandexId"] = РезультатЗапросаДеталейПриемки["ИдентификаторЗаявкиВнешний"];
		СведенияОбИдентификаторахЗаявки["partnerId"] = РезультатЗапросаДеталейПриемки["ИдентификаторЗаявки"];
		СведенияОбИдентификаторахЗаявки["fulfillmentId"] = РезультатЗапросаДеталейПриемки["ИдентификаторСклада"];

		ДанныеЗаявки["inboundId"] = СведенияОбИдентификаторахЗаявки;
		
		ДанныеЗаявки["inboundType"] = 
				дсфОбщегоНазначенияЯндексМаркет.КодТипаПриемкиПоЗначениюПеречисления(РезультатЗапросаДеталейПриемки["ТипПриемки"]);
				
		ДанныеЗаявки["interval"] = РезультатЗапросаДеталейПриемки["ПериодДоставкиСтрокой"];
		
		ДанныеОтвета["inbound"] = ДанныеЗаявки;
		
		// реестр приемки - фактический, на момент запроса
		ТипОбъектаСписокРеестров = ФабрикаXDTO.Тип("http://www.dsf-yandex-market.kz", "Registries");
		ТипОбъектаРеестр = ФабрикаXDTO.Тип("http://www.dsf-yandex-market.kz", "Registry");
		
		СписокРеестров = ФабрикаXDTO.Создать(ТипОбъектаСписокРеестров);
		РеестрПриемки = ФабрикаXDTO.Создать(ТипОбъектаРеестр);
		
		СведенияОбИдентификаторахРеестра = ФабрикаXDTO.Создать(ТипОбъектаИдентификаторУниверсальный);
		СведенияОбИдентификаторахРеестра["yandexId"] = РезультатЗапросаДеталейПриемки["ИдентификаторРеестраВнешний"];
		СведенияОбИдентификаторахРеестра["partnerId"] = РезультатЗапросаДеталейПриемки["ИдентификаторРеестра"];

		РеестрПриемки["registryId"] = СведенияОбИдентификаторахРеестра;
		РеестрПриемки["inboundId"] = СведенияОбИдентификаторахЗаявки;
					
		РеестрПриемки["registryType"] =
							дсфОбщегоНазначенияЯндексМаркет.КодТипаРеестраПоЗначениюПеречисления(РезультатЗапросаДеталейПриемки["ТипРеестра"]);
		РеестрПриемки["date"] = XMLСтрока(РезультатЗапросаДеталейПриемки["ДатаРеестра"]);
		РеестрПриемки["comment"] = РезультатЗапросаДеталейПриемки["КомментарийКРеестру"];

		// принятые товары
		ТипОбъектаСписокТоваров = ФабрикаXDTO.Тип("http://www.dsf-yandex-market.kz", "RegistryItems");
		СписокТоваров = ФабрикаXDTO.Создать(ТипОбъектаСписокТоваров);
		
		ТипОбъектаСтрокаРеестра = ФабрикаXDTO.Тип("http://www.dsf-yandex-market.kz", "RegistryItem");
		ТипОбъектаДанныеОТоваре = ФабрикаXDTO.Тип("http://www.dsf-yandex-market.kz", "UnitInfo");
		ТипОбъектаСписокСКоличеством = ФабрикаXDTO.Тип("http://www.dsf-yandex-market.kz", "UnitCounts");
		ТипОбъектаОписаниеКоличества = ФабрикаXDTO.Тип("http://www.dsf-yandex-market.kz", "UnitCount");
		ТипОбъектаДополнительныеИд = ФабрикаXDTO.Тип("http://www.dsf-yandex-market.kz", "CompositeId");
		ТипОбъектаИдентификаторыЕдиниц = ФабрикаXDTO.Тип("http://www.dsf-yandex-market.kz", "PartialIds");
		ТипОбъектаИдентификаторЕдиницы = ФабрикаXDTO.Тип("http://www.dsf-yandex-market.kz", "PartialId");
		
		Для каждого ДанныеОПринятомТоваре Из РезультатЗапросаДеталейПриемки["ПринятыеТовары"] Цикл
			СтрокаРеестра = ФабрикаXDTO.Создать(ТипОбъектаСтрокаРеестра);
			
			СтрокаРеестра["name"] = ДанныеОПринятомТоваре["Наименование"];
			
			ДанныеОТоваре = ФабрикаXDTO.Создать(ТипОбъектаДанныеОТоваре);
			
			СписокСКоличеством = ФабрикаXDTO.Создать(ТипОбъектаСписокСКоличеством);

			Для каждого ЭлементОписанияКоличества Из ДанныеОПринятомТоваре["СведенияОКоличестве"] Цикл
				ОписаниеКоличества = ФабрикаXDTO.Создать(ТипОбъектаОписаниеКоличества);
				
				Если ТипЗнч(ЭлементОписанияКоличества.Ключ) = Тип("ПеречислениеСсылка.дсфСтатусыЕдиницТовараЯндексМаркет") Тогда
					ОписаниеКоличества["countType"] = XMLСтрока(ЭлементОписанияКоличества.Ключ);
	
				КонецЕсли;
	
				ОписаниеКоличества["quantity"] = XMLСтрока(ЭлементОписанияКоличества.Значение);
				
				СписокСКоличеством["count"].Добавить(ОписаниеКоличества);

			КонецЦикла;
			
			ДанныеОТоваре["counts"] = СписокСКоличеством;
			
			// идентификаторы номенклатуры
			ИдентификаторыНоменклатуры = ФабрикаXDTO.Создать(ТипОбъектаДополнительныеИд);
			СписокИдентификаторовЕдиниц = ФабрикаXDTO.Создать(ТипОбъектаИдентификаторыЕдиниц);
			Для каждого ЭлементОписанияИдентификаторов Из ДанныеОПринятомТоваре["Идентификаторы"] Цикл
				ОписаниеИдентификатора = ФабрикаXDTO.Создать(ТипОбъектаИдентификаторЕдиницы);
				
				Если ТипЗнч(ЭлементОписанияИдентификаторов.Ключ) = Тип("ПеречислениеСсылка.дсфТипыИдентификаторовЯндексМаркет") Тогда
					ОписаниеИдентификатора["idType"] = XMLСтрока(ЭлементОписанияИдентификаторов.Ключ);
	
				КонецЕсли;
	
				ОписаниеИдентификатора["value"] = XMLСтрока(ЭлементОписанияИдентификаторов.Значение);
				
				СписокИдентификаторовЕдиниц["partialId"].Добавить(ОписаниеИдентификатора);

			КонецЦикла;
			
			ИдентификаторыНоменклатуры["partialIds"] = СписокИдентификаторовЕдиниц;

			ДанныеОТоваре["compositeId"] = ИдентификаторыНоменклатуры;
			
			//
			СтрокаРеестра["unitInfo"] = ДанныеОТоваре;
			
			//
			СписокТоваров["item"].Добавить(СтрокаРеестра);
			
		КонецЦикла;
		
//		
//		Функция НовоеОписаниеЭлементаСпискаТоваровВРеестре() Экспорт
//	ОписаниеЭлемента = Новый Структура;
//	
//	ОписаниеЭлемента.Вставить("Наименование", ""); 
//	ОписаниеЭлемента.Вставить("Описание", "");

//	ОписаниеЭлемента.Вставить("Цена", 0);
//	ОписаниеЭлемента.Вставить("ТипыТовара", Новый Массив);

//	ОписаниеЭлемента.Вставить("Идентификаторы", Новый Соответствие);	// соответствие, где в качестве ключа используеется
//																		// перечисление dsf_ТипыИдентификаторов
//	ОписаниеЭлемента.Вставить("СведенияОКоличестве", Новый Соответствие);	// соответствие, где в качестве ключа используеется
//																			// перечисление dsf_СтатусыЕдиницТовара
//																	
//	ОписаниеЭлемента.Вставить("Штрихкоды", Новый Массив); // см. НовоеОписаниеШтрихкода
//	
//	ОписаниеЭлемента.Вставить("ВГХ", НовоеОписаниеВГХОбъекта()); // см. НовоеОписаниеВГХОбъекта()
//	
//	ОписаниеЭлемента.Вставить("КоличествоЕдиницТовараВУпаковке", 0); // в шт, больше 0
//	ОписаниеЭлемента.Вставить("КоличествоКоробокДляЕдиницыТовара", 0); // в шт, больше 0
//	
//	Возврат ОписаниеЭлемента;

//КонецФункции
			
		РеестрПриемки["items"] = СписокТоваров;
		
		СписокРеестров["registry"].Добавить(РеестрПриемки);
		ДанныеОтвета["registries"] = СписокРеестров;
		
	Иначе
		Для каждого ТекОшибка Из РезультатЗапросаДеталейПриемки.Ошибки Цикл
			
			НоваяОшибка = дсфОбработкаОшибокЯндексМаркет.НевозможноОбработатьЗапрос();
			НоваяОшибка.description = ТекОшибка;
			
			Результат["Ошибки"].Добавить(НоваяОшибка);

		КонецЦикла;

	КонецЕсли;
	
	// ответ структурой, т.к. надо возвращать несколько объектов
	Результат["Данные"] = ДанныеОтвета;

КонецПроцедуры

Процедура ПодготовитьИсториюСтатусовЗаявокНаПриемку(ИдентификаторыЗаявокНаПриемку, Результат) Экспорт

	УстановитьПривилегированныйРежим(Истина); 
	
	ЗаявкиНаПриемку = Новый Массив;
	
	Для каждого ОписаниеЗаявки Из ИдентификаторыЗаявокНаПриемку Цикл
		
		ИдентификаторЗаявкиВнешний = ОписаниеЗаявки["yandexId"];
		ИдентификаторЗаявки = ОписаниеЗаявки["partnerId"];
		
		Заявка = 
			РегистрыСведений.дсфИдентификаторыЯндексМаркет.СсылкаНаОбъектПоПубличномуИдентификатору(ИдентификаторЗаявкиВнешний);
	
		Если Заявка = Неопределено Тогда
			ТекстОшибки = СтрШаблон("Заявка на приемку с yandexId %1 не была ранее зарегистрирована.", ИдентификаторЗаявкиВнешний);
			
			Ошибка = дсфОбработкаОшибокЯндексМаркет.ТипДанныхНеНайденОшибка();
			Ошибка.description = ТекстОшибки;

			Результат.Ошибки.Добавить(Ошибка);
		
		Иначе
			ЗаявкиНаПриемку.Добавить(Заявка);
			
		КонецЕсли;
	
	КонецЦикла;
	
	РезультатЗапросаИсторииСтатусов = дсфПолучениеСведенийЯндексМаркет.ИсторияСтатусовПриемок(ЗаявкиНаПриемку);
	
	Если РезультатЗапросаИсторииСтатусов.Успех Тогда
		
		ТипОбъекта = ФабрикаXDTO.Тип("http://www.dsf-yandex-market.kz", "InboundStatusHistories");
		ДанныеОтвета = ФабрикаXDTO.Создать(ТипОбъекта);
		
		ТипОбъектаЭлементСпискаПриемок = ФабрикаXDTO.Тип("http://www.dsf-yandex-market.kz", "InboundStatusHistory");
		
		ТипОбъектаИдентификаторПриемки = ФабрикаXDTO.Тип("http://www.dsf-yandex-market.kz", "ResourceId");
		ТипОбъектаИсторияСтатусов = ФабрикаXDTO.Тип("http://www.dsf-yandex-market.kz", "History");
		ТипОбъектаСтатусПриемки = ФабрикаXDTO.Тип("http://www.dsf-yandex-market.kz", "InboundStatus");
		
		Для каждого ДанныеПриемки Из РезультатЗапросаИсторииСтатусов["ИсторияСтатусовПриемок"] Цикл
			ЭлементСпискаПриемок = ФабрикаXDTO.Создать(ТипОбъектаЭлементСпискаПриемок);
			ИсторияСтатусов = ФабрикаXDTO.Создать(ТипОбъектаИсторияСтатусов);

			СведенияОбИдентификаторах = ФабрикаXDTO.Создать(ТипОбъектаИдентификаторПриемки);
			СведенияОбИдентификаторах["yandexId"] = ДанныеПриемки["ИдентификаторВнешний"];
			СведенияОбИдентификаторах["partnerId"] = ДанныеПриемки["ИдентификаторДокумента"];
			СведенияОбИдентификаторах["fulfillmentId"] = ДанныеПриемки["ИдентификаторСклада"];
			
			ЭлементСпискаПриемок["inboundId"] = СведенияОбИдентификаторах;
								
			Для каждого ОписаниеСтатуса Из ДанныеПриемки["Статусы"] Цикл
				
				ЭлементСпискаСтатусов = ФабрикаXDTO.Создать(ТипОбъектаСтатусПриемки);
				
				СведенияОбИдентификаторах = ФабрикаXDTO.Создать(ТипОбъектаИдентификаторПриемки);
				СведенияОбИдентификаторах["yandexId"] = ОписаниеСтатуса["ИдентификаторВнешний"];
				СведенияОбИдентификаторах["partnerId"] = ОписаниеСтатуса["ИдентификаторДокумента"];
				СведенияОбИдентификаторах["fulfillmentId"] = ОписаниеСтатуса["ИдентификаторСклада"];
				
				ЭлементСпискаСтатусов["inboundId"] = СведенияОбИдентификаторах;

				СведенияОСтатусе = ФабрикаXDTO.Создать(ТипОбъектаСтатусПриемки);
				
				СтатусДокумента = ОписаниеСтатуса["Статус"];
				ЭлементСпискаСтатусов["statusCode"] = дсфСтатусыДокументовЯндексМаркет.КодСтатусаПриемкиПоСтатусуДокумента(СтатусДокумента);
				ЭлементСпискаСтатусов["date"] = XMLСтрока(ОписаниеСтатуса["ДатаИзменения"]);
				
				ИсторияСтатусов["inboundStatus"].Добавить(ЭлементСпискаСтатусов);
				
			КонецЦикла;
	
			ЭлементСпискаПриемок["history"] = ИсторияСтатусов;

			ДанныеОтвета["InboundStatusHistory"].Добавить(ЭлементСпискаПриемок);

		КонецЦикла;
	
	Иначе
		Для каждого ТекОшибка Из РезультатЗапросаИсторииСтатусов.Ошибки Цикл
			
			НоваяОшибка = дсфОбработкаОшибокЯндексМаркет.НевозможноОбработатьЗапрос();
			НоваяОшибка.description = ТекОшибка;
			
			Результат["Ошибки"].Добавить(НоваяОшибка);

		КонецЦикла;

	КонецЕсли;
	
	// формирование Объекта xdto
	Результат["Данные"] = ДанныеОтвета;

КонецПроцедуры

Процедура ПодготовитьДанныеПоОстаткамТоваров(Результат,
											КоличествоЗаписей = 20,
											Смещение = 0,
											ОтборПоНоменклатуре = Неопределено) Экспорт
											
	ТаблицаКодовНоменклатуры = Новый ТаблицаЗначений; 
	ТаблицаКодовНоменклатуры.Колонки.Добавить("Артикул", ОбщегоНазначения.ОписаниеТипаСтрока(50));
	
	Если ОтборПоНоменклатуре <> Неопределено Тогда
	
		КодыТоваровСписокXdto = ОтборПоНоменклатуре["unitIds"]["unitId"];
	
		Для каждого КодыТовара Из КодыТоваровСписокXdto Цикл
			НоваяСтрока = ТаблицаКодовНоменклатуры.Добавить();
			НоваяСтрока["Артикул"] = КодыТовара["article"];
			
		КонецЦикла;

	КонецЕсли;
	
	РезультатЗапросаОстатков = дсфПолучениеСведенийЯндексМаркет.СведенияОбОстаткахТоваров(КоличествоЗаписей,
																				Смещение,
																				ТаблицаКодовНоменклатуры);
	
	ТипОбъектаОстатки = ФабрикаXDTO.Тип("http://www.dsf-yandex-market.kz", "itemStocksList");
	ДанныеОтвета = ФабрикаXDTO.Создать(ТипОбъектаОстатки);
	
	ТипОбъектаItemStocks = ФабрикаXDTO.Тип("http://www.dsf-yandex-market.kz", "itemStocks");
	СписокОстатков = ФабрикаXDTO.Создать(ТипОбъектаItemStocks);
	
	ТипОбъектаЭлементСписка = ФабрикаXDTO.Тип("http://www.dsf-yandex-market.kz", "itemStock");
	ТипОбъектаИдентификаторТовара= ФабрикаXDTO.Тип("http://www.dsf-yandex-market.kz", "UnitId");
	ТипОбъектаStocks= ФабрикаXDTO.Тип("http://www.dsf-yandex-market.kz", "Stocks");
	ТипОбъектаОстаток= ФабрикаXDTO.Тип("http://www.dsf-yandex-market.kz", "Stock");

	Если РезультатЗапросаОстатков.Успех Тогда
		
		Для каждого Элемент Из РезультатЗапросаОстатков["Товары"] Цикл
			ЭлементСпискаОстатков = ФабрикаXDTO.Создать(ТипОбъектаЭлементСписка);
			
			СведенияОбИдентификаторах = ФабрикаXDTO.Создать(ТипОбъектаИдентификаторТовара);
			СведенияОбИдентификаторах["article"] = Элемент["ИдентификаторТовара"];
			СведенияОбИдентификаторах["vendorId"] = Элемент["ИдентификаторПоставщика"];
			СведенияОбИдентификаторах["id"] = Элемент["ИдентификаторТоварногоПредложения"];
			
			ЭлементСпискаОстатков["unitId"] = СведенияОбИдентификаторах;
			
			ОстаткиТовара = ФабрикаXDTO.Создать(ТипОбъектаStocks);

			Для каждого ДанныеОбОстатках Из Элемент["Остатки"] Цикл
				Остаток = ФабрикаXDTO.Создать(ТипОбъектаОстаток);
				Остаток["count"] = ДанныеОбОстатках["Количество"];
				Остаток["type"] = ДанныеОбОстатках["ТипСтока"];
				Остаток["update"] = XMLСтрока(ДанныеОбОстатках["Дата"]);
				
				ОстаткиТовара["stock"].Добавить(Остаток);

			КонецЦикла;

			ЭлементСпискаОстатков["stocks"] = ОстаткиТовара; 

			СписокОстатков["itemStock"].Добавить(ЭлементСпискаОстатков);

		КонецЦикла;
	
		ДанныеОтвета["itemStocks"].Добавить(СписокОстатков);

	Иначе	
		Для каждого ТекОшибка Из РезультатЗапросаОстатков.Ошибки Цикл
			
			НоваяОшибка = дсфОбработкаОшибокЯндексМаркет.НевозможноОбработатьЗапрос();
			НоваяОшибка.description = ТекОшибка;
			
			Результат.Ошибки.Добавить(НоваяОшибка);

		КонецЦикла;
		
	КонецЕсли;
	
	// формирование Объекта xdto
	Результат["Данные"] = ДанныеОтвета;

КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Код процедур и функций
#КонецОбласти