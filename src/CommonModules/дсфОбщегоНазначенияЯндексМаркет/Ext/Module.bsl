#Область ПрограммныйИнтерфейс

// Проверяет наличие свойства у объекта XDTO. Возвращает Истина, если свойство присутствует.
//
// Параметры:
//  ОбъектXDTO	 - 	 - 
//  ИмяСвойства	 - 	 - 
// 
// Возвращаемое значение:
//   - Булево: Истина - свойство присутствует
//
Функция ЕстьСвойствоОбъектаXDTO(ОбъектXDTO, ИмяСвойства) Экспорт

	Возврат дсфОбщегоНазначения.ЕстьСвойствоОбъектаXDTO(ОбъектXDTO, ИмяСвойства);

КонецФункции

// Возвращает значение свойства объекта XDTO.
//
// Параметры:
//   ОбъектXDTO - ОбъектXDTO, из которого необходимо прочитать значение ключа.
//   ИмяСвойства - Строка - имя свойства объекта XDTO, для которого необходимо прочитать значение.
//   ЗначениеПоУмолчанию - Произвольный - возвращается когда в объекте нет значения по указанному
//                                        ключу.
//       Для скорости рекомендуется передавать только быстро вычисляемые значения (например примитивные типы),
//       а инициализацию более тяжелых значений выполнять после проверки полученного значения (только если это
//       требуется).
//
// Возвращаемое значение:
//   Произвольный - значение свойства xdto. ЗначениеПоУмолчанию если в xdto нет указанного свойства.
//
Функция ЗначениеСвойстваXdto(ОбъектXDTO, ИмяСвойства, ЗначениеПоУмолчанию = Неопределено) Экспорт
	
	Возврат дсфОбщегоНазначения.ЗначениеСвойстваXdto(ОбъектXDTO, ИмяСвойства, ЗначениеПоУмолчанию);
	
КонецФункции

Функция XMLСтрокаБезПространствИмен(Знач XMLСтрока) Экспорт
	
	Результат = XMLСтрока;
	
	Результат = СтрЗаменить(Результат, " xmlns=""http://www.dsf-yandex-market.kz""", "");
	Результат = СтрЗаменить(Результат, " xmlns:xs=""http://www.w3.org/2001/XMLSchema""", "");
	Результат = СтрЗаменить(Результат, " xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""", "");
	Результат = СтрЗаменить(Результат, " xmlns=""""", "");
	
	Возврат Результат;
	
КонецФункции

Функция XMLСтрокаСПространствомИменВУзлеRoot(Знач XMLСтрока) Экспорт
	
	Результат = XMLСтрока;
	
	Результат = СтрЗаменить(Результат,
							"<root>",
							"<root xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">");
	
	Возврат Результат;
	
КонецФункции

Функция ИнтервалДатИзСтроки(ИнтервалСтрокой, РазделительДат = "/", УчитыватьГраницуОкончания = Ложь) Экспорт
	Возврат дсфОбщегоНазначения.ИнтервалДатИзСтроки(ИнтервалСтрокой, РазделительДат, УчитыватьГраницуОкончания);
	
КонецФункции

Функция ДатаИзСтроки(ДатаСтрокой) Экспорт
	
	Возврат дсфОбщегоНазначения.ДатаИзСтроки(ДатаСтрокой);
	
КонецФункции

// Возвращает таблицу значений на основании массива структур
//
// Параметры:
// МассивСтруктур - Массив Из Структура - Массив структур, которые будут преобразованы в таблиц значений.
//    Свойства структуры первого элемента массива определяют состав колонок результирующей таблицы.
//
// Возвращаемое значение:
// ТаблицаЗначений - таблица значений, созданная из массива структур.
//
Функция ПреобразоватьМассивВТаблицуЗначений(МассивСтруктур) Экспорт
	
	Возврат дсфОбщегоНазначения.ПреобразоватьМассивВТаблицуЗначений(МассивСтруктур)

КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ОбъемПоГабаритам(Ширина = 0, Длина = 0, Высота = 0, КоэффициентПересчетаОбъема) Экспорт
	
	Возврат СлужебныйКлиентСервер.ОбъемПоРазмерам(Ширина, Длина, Высота, КоэффициентПересчетаОбъема);
	
КонецФункции

Функция ЕдиницаИзмеренияШтук() Экспорт

	Возврат дсфОбщегоНазначения.ЕдиницаИзмеренияШтук();
	
КонецФункции

Функция ПолучитьПеречислениеПоИмени(Знач ТипПеречисления, Знач ИмяПеречисления) Экспорт
	
	Возврат дсфОбщегоНазначения.ПолучитьПеречислениеПоИмени(ТипПеречисления, ИмяПеречисления);
	
КонецФункции

Функция ПроцессПоступленияПоУмолчанию() Экспорт
	
	Возврат дсфОбщегоНазначения.ПроцессПоступленияПоУмолчанию();
	
КонецФункции

Функция ПроцессОтгрузкиПоУмолчанию() Экспорт
	
	Возврат дсфОбщегоНазначения.ПроцессПоступленияПоУмолчанию();
	
КонецФункции

Функция ПоклажедательПоУмолчанию() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Поклажедатель = Константы.дсфОсновнойПоклажедательЯндексМаркет.Получить();
	
	Возврат Поклажедатель;
	
КонецФункции

Функция ИдентификаторСклада() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИдентификаторСклада = Константы.дсфИдентификаторСкладаЯндексМаркет.Получить();
	
	Возврат ИдентификаторСклада;
	
КонецФункции

Функция ИдентификаторПоставщика() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИдентификаторПоставщика = Константы.дсфОсновнойИдентификаторПоставщикаЯндексМаркет.Получить();
	
	Возврат ИдентификаторПоставщика;
	
КонецФункции

Функция ТипМестаХраненияДляПалетПоУмолчанию() Экспорт
	
	Возврат дсфОбщегоНазначения.ТипМестаХраненияДляПалетПоУмолчанию();
	
КонецФункции

Функция ТипМестаХраненияДляКоробовПоУмолчанию() Экспорт
	
	Возврат дсфОбщегоНазначения.ТипМестаХраненияДляКоробовПоУмолчанию();
		
КонецФункции

Функция ВидОбъектаХраненияПоТипуТовара(ТипТовара) Экспорт 

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	дсфСоответствиеВидовОбъектовХраненияТипамТоваровЯМаркет.ВидОбъектаХранения КАК ВидОбъектаХранения
	               |ИЗ
	               |	РегистрСведений.дсфСоответствиеВидовОбъектовХраненияТипамТоваровЯМаркет КАК дсфСоответствиеВидовОбъектовХраненияТипамТоваровЯМаркет
	               |ГДЕ
	               |	дсфСоответствиеВидовОбъектовХраненияТипамТоваровЯМаркет.ТипТовара = &ТипТовара";
	
	Запрос.УстановитьПараметр("ТипТовара", ТипТовара);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.ВидОбъектаХранения;	

	КонецЦикла;
		
	Возврат Справочники.ВидыОбъектовХранения.ПустаяСсылка();
	
КонецФункции

Функция СостояниеОбъектаХраненияПоСтатусуЕдиницыТовара(СтатусЕдиницыТовара) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	дсфСоответствиеСостоянийОбъектовХраненияКодамЯндексМаркет.СостояниеОбъектовХранения КАК СостояниеОбъектовХранения
	               |ИЗ
	               |	РегистрСведений.дсфСоответствиеСостоянийОбъектовХраненияКодамЯндексМаркет КАК дсфСоответствиеСостоянийОбъектовХраненияКодамЯндексМаркет
	               |ГДЕ
	               |	дсфСоответствиеСостоянийОбъектовХраненияКодамЯндексМаркет.СтатусЕдиницыТовара = &СтатусЕдиницыТовара";
	
	Запрос.УстановитьПараметр("СтатусЕдиницыТовара", СтатусЕдиницыТовара);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.СостояниеОбъектовХранения;
		
	КонецЦикла;
		
	Возврат Справочники.СостоянияОбъектовХранения.ПустаяСсылка();

КонецФункции

Функция ТипСтокаЯндексМаркетДляСостоянияОбъектаХранения(СостояниеОбъектаХранения) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	дсфСоответствиеСостоянийОбъектовХраненияКодамЯндексМаркет.ТипСтока КАК ТипСтока
	               |ИЗ
	               |	РегистрСведений.дсфСоответствиеСостоянийОбъектовХраненияКодамЯндексМаркет КАК дсфСоответствиеСостоянийОбъектовХраненияКодамЯндексМаркет
	               |ГДЕ
	               |	дсфСоответствиеСостоянийОбъектовХраненияКодамЯндексМаркет.СостояниеОбъектовХранения = &СостояниеОбъектовХранения";
	
	Запрос.УстановитьПараметр("СостояниеОбъектовХранения", СостояниеОбъектаХранения);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.ТипСтока;
		
	КонецЦикла;
		
	Возврат Перечисления.дсфТипыСтоковЯндексМаркет.НеОпределен;

КонецФункции

// Функция - Код типа стока яндекс маркет служебный
//
// Параметры:
//  ТипСтока - Перечисление.dsf_ТипыСтоковЯндексМаркет	 - 
// 
// Возвращаемое значение:
//   - число
//
Функция КодТипаСтокаЯндексМаркетСлужебный(ТипСтока) Экспорт
	Если ТипСтока = Перечисления.дсфТипыСтоковЯндексМаркет.НеОпределен Тогда
		Возврат -1;
		
	ИначеЕсли ТипСтока = Перечисления.дсфТипыСтоковЯндексМаркет.ПринимаютсяНаСкладМаркетаСлужебный Тогда
		Возврат 0;
		
	ИначеЕсли ТипСтока = Перечисления.дсфТипыСтоковЯндексМаркет.Годные Тогда
		Возврат 10;
	
	ИначеЕсли ТипСтока = Перечисления.дсфТипыСтоковЯндексМаркет.ДоступныДляЗаказа Тогда
		Возврат 20;
		
	ИначеЕсли ТипСтока = Перечисления.дсфТипыСтоковЯндексМаркет.Просрочены Тогда
		Возврат 30;

	ИначеЕсли ТипСтока = Перечисления.дсфТипыСтоковЯндексМаркет.НеНайденыНаСкладеПриИнвентаризацииИлиПеремещаются Тогда
		Возврат 40;
		
	ИначеЕсли ТипСтока = Перечисления.дсфТипыСтоковЯндексМаркет.Брак Тогда
		Возврат 50;
	
	КонецЕсли;
	
	Возврат -1;
	
КонецФункции

Функция КодТипСтокаЯндексМаркетДляСостоянияОбъектаХранения(СостояниеОбъектаХранения) Экспорт
	
	ТипСтока = ТипСтокаЯндексМаркетДляСостоянияОбъектаХранения(СостояниеОбъектаХранения);

	Возврат КодТипаСтокаЯндексМаркетСлужебный(ТипСтока);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ТипПриемкиПоЧисловомуКоду(КодТипаПриемки) Экспорт

	Если КодТипаПриемки = 0 Тогда
		Возврат Перечисления.дсфТипыПриемкиЯндексМаркет.НаСкладМаркетаFBY;
		
	ИначеЕсли КодТипаПриемки = 1 Тогда
		Возврат Перечисления.дсфТипыПриемкиЯндексМаркет.НаСкладМаркетаFBYPlus;
	
	Иначе
		Возврат Перечисления.дсфТипыПриемкиЯндексМаркет.ПустаяСсылка();
		
	КонецЕсли;

КонецФункции

Функция КодТипаПриемкиПоЗначениюПеречисления(ТипПриемки) Экспорт
	
	Если ТипПриемки = Перечисления.дсфТипыПриемкиЯндексМаркет.НаСкладМаркетаFBY Тогда
		Возврат 0;
	
	ИначеЕсли ТипПриемки = Перечисления.дсфТипыПриемкиЯндексМаркет.НаСкладМаркетаFBYPlus Тогда
		Возврат 1;

	Иначе
		Возврат 0;
	
	КонецЕсли;

КонецФункции

Функция ТипОтправкиПоЧисловомуКоду(КодТипаОтправки) Экспорт

	Если КодТипаОтправки = 0 Тогда
		Возврат Перечисления.дсфТипыОтправкиЯндексМаркет.СПартнерскогоСклада;
		
	ИначеЕсли КодТипаОтправки = 1 Тогда
		Возврат Перечисления.дсфТипыОтправкиЯндексМаркет.СписываютсяПриИнвентаризации;

	ИначеЕсли КодТипаОтправки = 3 Тогда
		Возврат Перечисления.дсфТипыОтправкиЯндексМаркет.ПеремещениеНеСвязанноеСЗаказами;
	
	ИначеЕсли КодТипаОтправки = 11 Тогда
		Возврат Перечисления.дсфТипыОтправкиЯндексМаркет.ОбычноеИзъятие;
	
	ИначеЕсли КодТипаОтправки = 28 Тогда
		Возврат Перечисления.дсфТипыОтправкиЯндексМаркет.Отгрузка;
		
	Иначе
		Возврат Перечисления.дсфТипыОтправкиЯндексМаркет.ПустаяСсылка();
		
	КонецЕсли;

КонецФункции

Функция КодТипаОтправкиПоЗначениюПеречисления(ТипОправки) Экспорт
	
	Если ТипОправки = Перечисления.дсфТипыОтправкиЯндексМаркет.СПартнерскогоСклада Тогда
		Возврат 0;
		
	ИначеЕсли ТипОправки = Перечисления.дсфТипыОтправкиЯндексМаркет.СписываютсяПриИнвентаризации Тогда
		Возврат 1;
		
	ИначеЕсли ТипОправки = Перечисления.дсфТипыОтправкиЯндексМаркет.ПеремещениеНеСвязанноеСЗаказами Тогда
		Возврат 3;
		
	ИначеЕсли ТипОправки = Перечисления.дсфТипыОтправкиЯндексМаркет.ОбычноеИзъятие Тогда
		Возврат 11;
	
	ИначеЕсли ТипОправки = Перечисления.дсфТипыОтправкиЯндексМаркет.Отгрузка Тогда
		Возврат 28;
	
	Иначе
		Возврат 0;
	
	КонецЕсли;

КонецФункции

Функция ТипРеестраПоЧисловомуКоду(КодТипаРеестра) Экспорт

	Если КодТипаРеестра = 0 Тогда
		Возврат Перечисления.дсфТипыРеестровЯндексМаркет.ПлановыйРеестрМаркет;
		
	ИначеЕсли КодТипаРеестра = 1 Тогда
		Возврат Перечисления.дсфТипыРеестровЯндексМаркет.ФактическийРеестрПартнер;
	
	Иначе
		Возврат Перечисления.дсфТипыРеестровЯндексМаркет.ПустаяСсылка();
		
	КонецЕсли;

КонецФункции

Функция КодТипаРеестраПоЗначениюПеречисления(ТипРеестра) Экспорт
	
	Если ТипРеестра = Перечисления.дсфТипыРеестровЯндексМаркет.ПлановыйРеестрМаркет Тогда
		Возврат 0;
		
	ИначеЕсли ТипРеестра = Перечисления.дсфТипыРеестровЯндексМаркет.ФактическийРеестрПартнер Тогда
		Возврат 1;
	
	Иначе
		Возврат 0;
		
	КонецЕсли;

КонецФункции

Функция ТипИдентификатораПоНазванию(ТипИдентификатораСтрокой) Экспорт
	Возврат ПолучитьПеречислениеПоИмени("дсфТипыИдентификаторовЯндексМаркет", ТипИдентификатораСтрокой);	
	
КонецФункции

Функция СтатусЕдиницыТовараПоНазванию(СтатусЕдиницыТовараСтрокой) Экспорт
	Возврат ПолучитьПеречислениеПоИмени("дсфСтатусыЕдиницТовараЯндексМаркет", СтатусЕдиницыТовараСтрокой);	
	
КонецФункции

// Возвращает описание типов по переданному типу
//
// Параметры:
//    Тип - Тип - Тип значения
//
// Возвращаемое значение:
//    ОписаниеТипов - созданное на основании переданного типа описание типов.
//
Функция ОписаниеТиповПоТипу(Тип) Экспорт
	Возврат дсфОбщегоНазначения.ОписаниеТиповПоТипу(Тип);

КонецФункции

#КонецОбласти