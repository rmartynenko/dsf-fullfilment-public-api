#Область ПрограммныйИнтерфейс 

Функция ИмяПравилаРегистрацииНовойНоменклатуры() Экспорт
	Возврат "РегистрацияНовыхПозицийНоменклатуры";
	
КонецФункции

Функция ИмяПравилаРегистрацииНовогоКонтрагента() Экспорт
	Возврат "РегистрацияНовогоКонтрагента";
	
КонецФункции

Функция ИмяПравилаРегистрацииНовогоПланаОтгрузки() Экспорт
	Возврат "РегистрацияНовогоПланаОтгрузки";
	
КонецФункции


#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
Процедура ЗаполнитьДоступныеПравилаОбработки(ПравилаОбработки) Экспорт
	
	ПравилаОбработки.Вставить(ИмяПравилаРегистрацииНовойНоменклатуры(),
								ПравилоРегистрацииНовойНоменклатурыСлужебноеОписание());
								
	ПравилаОбработки.Вставить(ИмяПравилаРегистрацииНовогоКонтрагента(),
								ПравилоРегистрацииНовогоКонтрагентаСлужебноеОписание());

	ПравилаОбработки.Вставить(ИмяПравилаРегистрацииНовогоПланаОтгрузки(),
								ПравилоРегистрацииНовогоПланаОтгрузкиСлужебноеОписание());
							
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ПравилоРегистрацииНовойНоменклатурыСлужебноеОписание()
	ИмяПравила = ИмяПравилаРегистрацииНовойНоменклатуры();
	
	ПравилоОбработки = аргмПравилаОбработкиВходящихЗапросовA1.НовоеПравилоОбработкиВходящихЗапросов(ИмяПравила);
	
	ПравилоОбработки["ИмяМетода"] = "дсфОбработкаВходящихЗапросовАпи.РегистрацияНовыхПозицийНоменклатуры";
	ПравилоОбработки["ПроверятьНаличиеТелаЗапроса"] = Истина;
	
	ПравилоОбработки["ПроверятьИдемпотентность"] = Истина;
	ПравилоОбработки.Вставить("ТипЗапроса", "postGoods");
	ПравилоОбработки.Вставить("ПроверятьНаличиеКлючаАпи", Истина);
	
	Возврат ПравилоОбработки;
	
КонецФункции

Функция ПравилоРегистрацииНовогоКонтрагентаСлужебноеОписание()
	ИмяПравила = ИмяПравилаРегистрацииНовогоКонтрагента();
	
	ПравилоОбработки = аргмПравилаОбработкиВходящихЗапросовA1.НовоеПравилоОбработкиВходящихЗапросов(ИмяПравила);
	
	ПравилоОбработки["ИмяМетода"] = "дсфОбработкаВходящихЗапросовАпи.РегистрацияНовогоКонтрагента";
	ПравилоОбработки["ПроверятьНаличиеТелаЗапроса"] = Истина;
	
	ПравилоОбработки["ПроверятьИдемпотентность"] = Истина;
	ПравилоОбработки.Вставить("ТипЗапроса", "postPartners");
	ПравилоОбработки.Вставить("ПроверятьНаличиеКлючаАпи", Истина);
	
	Возврат ПравилоОбработки;
	
КонецФункции

Функция ПравилоРегистрацииНовогоПланаОтгрузкиСлужебноеОписание()
	ИмяПравила = ИмяПравилаРегистрацииНовогоПланаОтгрузки();
	
	ПравилоОбработки = аргмПравилаОбработкиВходящихЗапросовA1.НовоеПравилоОбработкиВходящихЗапросов(ИмяПравила);
	
	ПравилоОбработки["ИмяМетода"] = "дсфОбработкаВходящихЗапросовАпи.РегистрацияНовогоПланаОтгрузки";
	ПравилоОбработки["ПроверятьНаличиеТелаЗапроса"] = Истина;
	
	ИменаСвойствСоЗначениямиДата = Новый Массив; 
	ИменаСвойствСоЗначениямиДата.Добавить("order_date");
	ИменаСвойствСоЗначениямиДата.Добавить("planned_shipment_date");
	ИменаСвойствСоЗначениямиДата.Добавить("planned_delivery_date");

	ПравилоОбработки["ИменаСвойствСоЗначениямиДата"] = ИменаСвойствСоЗначениямиДата;
	
	ПравилоОбработки["ПроверятьИдемпотентность"] = Истина;
	ПравилоОбработки.Вставить("ТипЗапроса", "postShipmentPlans");
	ПравилоОбработки.Вставить("ПроверятьНаличиеКлючаАпи", Истина);

	Возврат ПравилоОбработки;
	
КонецФункции

//Функция ПравилоОбновлениеВозвратовДССлужебноеОписание()
//	ИмяПравила = ИмяПравилаОбновленияДокументовВозвратаДС();
//	
//	ПравилоОбработки = аргмПравилаОбработкиВходящихЗапросовA1.НовоеПравилоОбработкиВходящихЗапросов(ИмяПравила);
//	
//	ПравилоОбработки["ИмяМетода"] = "аргмОбработкаВходящихЗапросовАйна.ОбновлениеДокументовВозвратаДС";
//	ПравилоОбработки["ПроверятьНаличиеТелаЗапроса"] = Истина;
//	
//	ИменаСвойствСоЗначениямиДата = Новый Массив; 
//	ИменаСвойствСоЗначениямиДата.Добавить("date");
//	ИменаСвойствСоЗначениямиДата.Добавить("order_date");
//	ИменаСвойствСоЗначениямиДата.Добавить("primary_receipt_date");
//	
//	ПравилоОбработки["ИменаСвойствСоЗначениямиДата"] = ИменаСвойствСоЗначениямиДата;
//	
//	ПравилоОбработки["ПроверятьИдемпотентность"] = Истина;
//	
//	Возврат ПравилоОбработки;
//	
//КонецФункции

#КонецОбласти