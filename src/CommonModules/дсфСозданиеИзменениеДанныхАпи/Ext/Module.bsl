#Область ПрограммныйИнтерфейс

#Область Номенклатура

Функция НоваяНоменклатура(ИсходныеДанные, ПараметрыСоздания, Сообщения = Неопределено, Ошибки = Неопределено) Экспорт
	
	Если Сообщения = Неопределено Тогда
		Сообщения = Новый Массив;
		
	КонецЕсли;

	Если Ошибки = Неопределено Тогда
		Ошибки = Новый Массив;
		
	КонецЕсли;
	
	ОписаниеНоменклатуры = дсфНормативноСправочнаяИнформацияАпи.НовоеВходящееОписаниеНоменклатуры();
	дсфНормативноСправочнаяИнформацияАпи.ЗаполнитьВходящееОписаниеНоменклатуры(ИсходныеДанные,
																				ОписаниеНоменклатуры,
																				Ошибки,
																				ПараметрыСоздания);
		
	// проверка наличия номенклатуры по параметрам (Артикул, Поклажедатель)
	Номенклатура = дсфНормативноСправочнаяИнформацияАпи.НоменклатураПоклажедателяПоАртикулу(
																		ОписаниеНоменклатуры["Артикул"],
																		ОписаниеНоменклатуры["Поклажедатель"]);
	
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		ТекстОшибки = СтрШаблон("Номенклатура с артикулом %1 была зарегистрирована ранее. ID: %2. Для модификации воспользуйтесь методом PUT",
								ОписаниеНоменклатуры["Артикул"],
								XMLСтрока(Номенклатура));
								
		Ошибки.Добавить(ТекстОшибки);
		
		Возврат Номенклатура;
		
	КонецЕсли;

	// создание номенклатуры
	Номенклатура = дсфНормативноСправочнаяИнформацияАпи.НоваяНоменклатураПоОписанию(ОписаниеНоменклатуры, Ошибки);
	
	// дозапись штрихкодов номенклатуры для базовых единиц (где коэфф = 1)
	ОбъектыХранения = КонвертацияДокументов.ПолучитьОбъектыХраненияНоменклатуры(Номенклатура).ВыгрузитьКолонку("ОбъектХранения");
	Если ОбъектыХранения.Количество() > 0 Тогда
		ОбъектХраненияДляНоменклатуры = ОбъектыХранения[0];
		
		УпаковкаНоменклатуры = дсфНормативноСправочнаяИнформацияАпи.УпаковкаБазовойЕдиницыИзмеренияНоменклатуры(Номенклатура);
		Упаковка = Справочники.УпаковкиНоменклатуры.НайтиУпаковку(ОбъектХраненияДляНоменклатуры, УпаковкаНоменклатуры);
		Если ЗначениеЗаполнено(УпаковкаНоменклатуры) Тогда
			дсфНормативноСправочнаяИнформацияАпи.ОбновитьШтрихкодыОбъектаХраненияНоменклатуры(ОбъектХраненияДляНоменклатуры,
																			ОписаниеНоменклатуры["Штрихкоды"],
																			Упаковка);
			
		КонецЕсли;

	КонецЕсли;

	Возврат Номенклатура;

КонецФункции

#КонецОбласти

#Область Контрагенты

Функция НовыйКонтрагент(ИсходныеДанные, ПараметрыСоздания, Сообщения = Неопределено, Ошибки = Неопределено) Экспорт
	
	Если Сообщения = Неопределено Тогда
		Сообщения = Новый Массив;
		
	КонецЕсли;

	Если Ошибки = Неопределено Тогда
		Ошибки = Новый Массив;
		
	КонецЕсли;
	
	ОписаниеКонтрагента = дсфНормативноСправочнаяИнформацияАпи.НовоеВходящееОписаниеКонтрагента();
	дсфНормативноСправочнаяИнформацияАпи.ЗаполнитьВходящееОписаниеКонтрагента(ИсходныеДанные,
																			ОписаниеКонтрагента,
																			Ошибки,
																			ПараметрыСоздания);
	
	// проверка наличия контрагента по параметрам (Наименование, Родитель (Поклажедатель))
	Контрагент = дсфНормативноСправочнаяИнформацияАпи.КонтрагентПоНаименованиюИРодителю(
													ОписаниеКонтрагента["Наименование"],
													ОписаниеКонтрагента["Поклажедатель"]);
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		ТекстОшибки = СтрШаблон("Для вашей организации уже зарегистрирован контрагент с наименованием %1. ID: %2. Для модификации воспользуйтесь методом PUT",
								ОписаниеКонтрагента["Наименование"],
								XMLСтрока(Контрагент));
								
		Ошибки.Добавить(ТекстОшибки);
		
		Возврат Контрагент;
		
	КонецЕсли;
	
	// создание контрагента
	Контрагент = дсфНормативноСправочнаяИнформацияАпи.НовыйКонтрагентПоОписанию(ОписаниеКонтрагента, Ошибки);
	
	Возврат Контрагент;

КонецФункции
	
#КонецОбласти

#Область Документы

Функция НовыйПланОтгрузки(ИсходныеДанные, ПараметрыСоздания, Сообщения = Неопределено, Ошибки = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Сообщения = Неопределено Тогда
		Сообщения = Новый Массив;
		
	КонецЕсли;

	Если Ошибки = Неопределено Тогда
		Ошибки = Новый Массив;
		
	КонецЕсли;
	
	ОписаниеПлана = дсфДокументыАпи.НовоеВходящееОписаниеПланаОтгрузки();
	дсфДокументыАпи.ЗаполнитьВходящееОписаниеПланаОтгрузки(ИсходныеДанные, ОписаниеПлана, Ошибки, ПараметрыСоздания);
	
	ВходящийИдПлана = ОписаниеПлана["ВходящийИдентификатор"];
	
	ПланОтгрузки = дсфСлужебныйАпи.ПроверитьНаличиеОбъектаСУказаннымИдентификатором(ВходящийИдПлана,
																					"Документ.ПланОтгрузки");
		
	Если ЗначениеЗаполнено(ПланОтгрузки) Тогда
		ТекстОшибки = СтрШаблон("Документ планирования отгрузки с ID %1 уже зарегистрирован. Для модификации воспользуйтесь методом PUT",
								ВходящийИдПлана);
								
		Ошибки.Добавить(ТекстОшибки);
		
		Возврат ПланОтгрузки;
		
	КонецЕсли;
	
	ПланОтгрузки = дсфДокументыАпи.НовыйПланОтгрузкиПоОписанию(ОписаниеПлана, Ошибки);
	
	Возврат ПланОтгрузки;

КонецФункции
	
#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Код процедур и функций
#КонецОбласти