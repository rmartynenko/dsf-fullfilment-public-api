#Область ПрограммныйИнтерфейс

#Область Номенклатура

Функция НоваяНоменклатура(ИсходныеДанные, ПараметрыСоздания, Сообщения = Неопределено, Ошибки = Неопределено) Экспорт
	
	Если Сообщения = Неопределено Тогда
		Сообщения = Новый Массив;
		
	КонецЕсли;

	Если Ошибки = Неопределено Тогда
		Ошибки = Новый Массив;
		
	КонецЕсли;
	
	ОписаниеНоменклатуры = дсфНоменклатураАпи.НовоеВходящееОписаниеНоменклатуры();
	дсфНоменклатураАпи.ЗаполнитьВходящееОписаниеНоменклатуры(ИсходныеДанные, ОписаниеНоменклатуры, Ошибки);
	
	ОписаниеНоменклатуры.Поклажедатель =
					ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыСоздания, "Поклажедатель", Неопределено);
					
	ОписаниеНоменклатуры.ПрефиксКода =
					ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыСоздания, "ПрефиксКода", "");
					
	Если Ошибки.Количество() > 0 Тогда
		ЗаписьЖурналаРегистрации("DSF.Goods", 
								УровеньЖурналаРегистрации.Ошибка,
								Метаданные.Документы.ЗаказКлиента,,
								СтрСоединить(Ошибки, ","));
								
		Возврат Неопределено;
		
	КонецЕсли;
	
	// проверка наличия номенклатуры по параметрам (Артикул, Поклажедатель)
	Номенклатура = дсфНоменклатураАпи.НоменклатураПоклажедателяПоАртикулу(ОписаниеНоменклатуры["Поклажедатель"],
																		ОписаниеНоменклатуры["Артикул"]);
	
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		ТекстОшибки = СтрШаблон("Номенклатура с артикулом %1 уже зарегистрирована. Для модификации воспользуйтесь методом PUT",
								ОписаниеНоменклатуры["Артикул"]);
								
		Ошибки.Добавить(ТекстОшибки);
		
		Возврат Неопределено;
		
	КонецЕсли;

	// создание номенклатуры
	Номенклатура = дсфНоменклатураАпи.НоваяНоменклатураПоОписанию(ОписаниеНоменклатуры, Ошибки);

	//ИдентификаторЗаказа = ПараметрыЗаказа.ИдентификаторЗаказа;
	//
	//ЗаказКлиента = акнСлужебныйАйконМаркет.ПроверитьНаличиеОбъектаСУказаннымИдентификатором(ИдентификаторЗаказа,
	//																			"Документ.ЗаказКлиента");

	//Если ЗначениеЗаполнено(ЗаказКлиента) Тогда
	//	ТекстОшибки = СтрШаблон("Заказ клиента с id %1 уже зарегистрирован. Для модификации воспользуйтесь методом PUT",
	//							XMLСтрока(ИдентификаторЗаказа));
	//							
	//	Ошибки.Добавить(ТекстОшибки);
	//	
	//	Возврат Неопределено;
	//	
	//КонецЕсли;
	//
	//СсылкаНаЗаказ = Документы.ЗаказКлиента.ПолучитьСсылку(ПараметрыЗаказа.ИдентификаторЗаказа);

	//ЗаказКлиента = Документы.ЗаказКлиента.СоздатьДокумент();
	//ЗаказКлиента.Заполнить(Неопределено);
	//ЗаказКлиента.УстановитьСсылкуНового(СсылкаНаЗаказ);
	//
	//НачатьТранзакцию();
	//Попытка
	//	СозданиеИзменениеЗаказаКлиентаПродолжитьЗаполнение(ЗаказКлиента, ПараметрыЗаказа, ПараметрыСоздания, Сообщения, Ошибки);
	//	
	//	ЗаказКлиента.Записать(РежимЗаписиДокумента.Проведение);
	//	
	//	ЗафиксироватьТранзакцию();

	//Исключение
	//	
	//	Если ТранзакцияАктивна() Тогда 
	//		ОтменитьТранзакцию();
	//		
	//	КонецЕсли;
	//	
	//	ИнформацияОбОшибке = ИнформацияОбОшибке();
	//	ТекстОшибки = ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
	//																	 
	//	Ошибки.Добавить(ТекстОшибки);
	//	
	//	ЗаписьЖурналаРегистрации("[Icon] Новый заказ клиента", 
	//								УровеньЖурналаРегистрации.Ошибка,
	//								Метаданные.Документы.ЗаказКлиента,,
	//								ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке));
	//								
	//								
	//	акнСлужебныйАйконМаркет.ДобавитьСоообщенияПользователюВМассивОшибок(Сообщения);
	//						
	//	Возврат Неопределено;

	//КонецПопытки;
	
	Если Ошибки.Количество() > 0 Тогда
		Возврат Неопределено;
		
	КонецЕсли;
		
	Возврат Номенклатура;

КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Код процедур и функций
#КонецОбласти