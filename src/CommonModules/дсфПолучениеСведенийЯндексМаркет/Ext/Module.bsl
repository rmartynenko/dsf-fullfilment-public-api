#Область ПрограммныйИнтерфейс
Функция НовоеОписаниеОстаткаКоличестваТовара() Экспорт
	ОстатокКоличестваТовара = Новый Структура;
	
	ОстатокКоличестваТовара.Вставить("ТипСтока", -1);
	ОстатокКоличестваТовара.Вставить("Количество", 0);
	ОстатокКоличестваТовара.Вставить("Дата", Неопределено);
	
	Возврат ОстатокКоличестваТовара;

КонецФункции

Функция НовоеОписаниеОстатковТовара() Экспорт
	ОстаткиТовара = Новый Структура;
	
	ОстаткиТовара.Вставить("ИдентификаторТовара", "");  // обычно артикул или yandexId
	
	ИдентификаторПоставщика = дсфОбщегоНазначенияЯндексМаркет.ИдентификаторПоставщика();
	Если ПустаяСтрока(ИдентификаторПоставщика) Тогда
		ЗначениеИдентификаторПоставщика = 0;
		
	Иначе
		ЗначениеИдентификаторПоставщика = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ИдентификаторПоставщика);
		
	КонецЕсли;
	
	ОстаткиТовара.Вставить("ИдентификаторПоставщика", ЗначениеИдентификаторПоставщика);
	
	ОстаткиТовара.Вставить("ИдентификаторТоварногоПредложения", "");

	ОстаткиТовара.Вставить("Остатки", Новый Массив);  // см. dsf_ПолучениеСведений.НовоеОписаниеОстаткаКоличестваТовара
	
	Возврат ОстаткиТовара;

КонецФункции

Функция НовыйРезультатЗапросаОстатковТоваров() Экспорт
	ОписаниеРезультата = Новый Структура;
	
	ОписаниеРезультата.Вставить("Успех", Ложь);
	ОписаниеРезультата.Вставить("Ошибки", Новый Массив);
	ОписаниеРезультата.Вставить("Товары", Новый Массив); // см. dsf_ПолучениеСведений.НовоеОписаниеОстатковТовара

	Возврат ОписаниеРезультата;
	
КонецФункции

Функция НовоеОписаниеСтатусаДокумента() Экспорт
	СведенияОСтатусе = Новый Структура;
	
	СведенияОСтатусе.Вставить("Документ", Неопределено);
	СведенияОСтатусе.Вставить("Статус", Справочники.СтатусыДокументов.ПустаяСсылка());
	СведенияОСтатусе.Вставить("ДатаИзменения", Неопределено);
	СведенияОСтатусе.Вставить("ИдентификаторДокумента", "");
	СведенияОСтатусе.Вставить("ИдентификаторВнешний", "");
	СведенияОСтатусе.Вставить("ИдентификаторСклада", "");
	
	Возврат СведенияОСтатусе;

КонецФункции

Функция НовыйРезультатЗапросаДеталейПриемки() Экспорт
	ОписаниеРезультата = Новый Структура;
	
	ОписаниеРезультата.Вставить("Успех", Ложь);
	ОписаниеРезультата.Вставить("Ошибки", Новый Массив); 
	ОписаниеРезультата.Вставить("ИдентификаторСклада", "");
	ОписаниеРезультата.Вставить("ИдентификаторЗаявки", "");
	ОписаниеРезультата.Вставить("ИдентификаторЗаявкиВнешний", "");
	ОписаниеРезультата.Вставить("ТипПриемки", Неопределено);
	ОписаниеРезультата.Вставить("ПериодДоставкиНачало", Неопределено);
	ОписаниеРезультата.Вставить("ПериодДоставкиОкончание", Неопределено);
	ОписаниеРезультата.Вставить("ПериодДоставкиСтрокой", "");
	ОписаниеРезультата.Вставить("ИдентификаторРеестра", "");
	ОписаниеРезультата.Вставить("ИдентификаторРеестраВнешний", "");
	ОписаниеРезультата.Вставить("ДатаРеестра", Неопределено);
	ОписаниеРезультата.Вставить("ТипРеестра", Неопределено);
	ОписаниеРезультата.Вставить("КомментарийКРеестру", "");
	ОписаниеРезультата.Вставить("ПринятыеТовары", Новый Массив); // см. dsf_СозданиеОбновлениеДанныхЯндексМаркет.НовоеОписаниеЭлементаСпискаТоваровВРеестре
	
	Возврат ОписаниеРезультата;
	
КонецФункции

Функция НовыйРезультатЗапросаДеталейОтгрузки() Экспорт
	ОписаниеРезультата = Новый Структура;
	
	ОписаниеРезультата.Вставить("Успех", Ложь);
	ОписаниеРезультата.Вставить("Ошибки", Новый Массив); 
	ОписаниеРезультата.Вставить("ИдентификаторСклада", "");
	ОписаниеРезультата.Вставить("ИдентификаторЗаявки", "");
	ОписаниеРезультата.Вставить("ИдентификаторЗаявкиВнешний", "");
	ОписаниеРезультата.Вставить("ТипОтправки", Неопределено);
	ОписаниеРезультата.Вставить("ПериодОтправкиНачало", Неопределено);
	ОписаниеРезультата.Вставить("ПериодОтправкиОкончание", Неопределено);
	ОписаниеРезультата.Вставить("ПериодОтправкиСтрокой", "");
	ОписаниеРезультата.Вставить("ИдентификаторРеестра", "");
	ОписаниеРезультата.Вставить("ИдентификаторРеестраВнешний", "");
	ОписаниеРезультата.Вставить("ДатаРеестра", Неопределено);
	ОписаниеРезультата.Вставить("ТипРеестра", Неопределено);
	ОписаниеРезультата.Вставить("КомментарийКРеестру", "");
	ОписаниеРезультата.Вставить("ОтгруженныеТовары", Новый Массив); // см. dsf_СозданиеОбновлениеДанныхЯндексМаркет.НовоеОписаниеЭлементаСпискаТоваровВРеестре
	
	Возврат ОписаниеРезультата;
	
КонецФункции

Функция НовыйРезультатЗапросаСтатусовДокументов() Экспорт
	ОписаниеРезультата = Новый Структура;
	
	ОписаниеРезультата.Вставить("Успех", Ложь);
	ОписаниеРезультата.Вставить("Ошибки", Новый Массив);
	ОписаниеРезультата.Вставить("Статусы", Новый Массив); // см. dsf_ПолучениеСведений.НовоеОписаниеСтатусаДокумента

	Возврат ОписаниеРезультата;
	
КонецФункции

Функция НовоеОписаниеИсторииСтатусаДокумента() Экспорт
	СведенияОбИсторииСтатусаДокумента = Новый Структура;
	
	СведенияОбИсторииСтатусаДокумента.Вставить("Документ", Неопределено);
	СведенияОбИсторииСтатусаДокумента.Вставить("ИдентификаторДокумента", "");
	СведенияОбИсторииСтатусаДокумента.Вставить("ИдентификаторВнешний", "");
	СведенияОбИсторииСтатусаДокумента.Вставить("ИдентификаторСклада", "");
	СведенияОбИсторииСтатусаДокумента.Вставить("Статусы", Новый Массив); // см. dsf_ПолучениеСведений.НовоеОписаниеСтатусаДокумента

	Возврат СведенияОбИсторииСтатусаДокумента;

КонецФункции

Функция НовыйРезультатЗапросаИсторииСтатусовПриемок() Экспорт
	ОписаниеРезультата = Новый Структура;
	
	ОписаниеРезультата.Вставить("Успех", Ложь);
	ОписаниеРезультата.Вставить("Ошибки", Новый Массив);
	ОписаниеРезультата.Вставить("ИсторияСтатусовПриемок", Новый Массив); // см. dsf_ПолучениеСведений.НовоеОписаниеИсторииСтатусаДокумента

	Возврат ОписаниеРезультата;
	
КонецФункции

Функция НовыйРезультатЗапросаИсторииСтатусовОтгрузок() Экспорт
	ОписаниеРезультата = Новый Структура;
	
	ОписаниеРезультата.Вставить("Успех", Ложь);
	ОписаниеРезультата.Вставить("Ошибки", Новый Массив);
	ОписаниеРезультата.Вставить("ИсторияСтатусовОтгрузок", Новый Массив); // см. dsf_ПолучениеСведений.НовоеОписаниеИсторииСтатусаДокумента

	Возврат ОписаниеРезультата;
	
КонецФункции

// Функция - Сведения о статусах приемок
//			Важно! Статус приемки определяется по статусу связанного с ней документа ОжидаемоеПоступление.
//			Связь должна быть зафиксирована в регистре сведений дсфЗаявкаНаПриемкуСвязанныеОбъектыЯМаркет
//
// Параметры:
//  Документы	 - Массив - 
// 
// Возвращаемое значение:
//   - Массив структур, см. dsf_ПолучениеСведений.НовыйРезультатЗапросаСтатусовПриемок
//
Функция СведенияОСтатусахПриемок(Документы) Экспорт

	РезультатЗапросаСтатусов = НовыйРезультатЗапросаСтатусовДокументов();
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	дсфЗаявкаНаПриемку.Ссылка КАК ЗаявкаНаПриемку,
	               |	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(дсфЗаявкаНаПриемку.Ссылка) КАК ЗаявкаНаПриемкуИдентификатор
	               |ПОМЕСТИТЬ ВТ_ЗаявкиНаПриемку
	               |ИЗ
	               |	Документ.дсфЗаявкаНаПриемку КАК дсфЗаявкаНаПриемку
	               |ГДЕ
	               |	дсфЗаявкаНаПриемку.Ссылка В(&МассивЗаявок)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ЗаявкаНаПриемку
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ЗаявкиНаПриемку.ЗаявкаНаПриемку КАК ЗаявкаНаПриемку,
	               |	ВТ_ЗаявкиНаПриемку.ЗаявкаНаПриемкуИдентификатор КАК ЗаявкаНаПриемкуИдентификатор,
	               |	ЕСТЬNULL(дсфИдентификаторыЯндексМаркет.Идентификатор, 0) КАК ИдентификаторВнешний,
	               |	ЕСТЬNULL(дсфЗаявкаНаПриемкуСвязанныеОбъектыЯМаркет.ОжидаемоеПоступление, НЕОПРЕДЕЛЕНО) КАК ОжидаемоеПоступление
	               |ПОМЕСТИТЬ ВТ_ЗаявкиНаПриемкуПолная
	               |ИЗ
	               |	ВТ_ЗаявкиНаПриемку КАК ВТ_ЗаявкиНаПриемку
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.дсфИдентификаторыЯндексМаркет КАК дсфИдентификаторыЯндексМаркет
	               |		ПО ВТ_ЗаявкиНаПриемку.ЗаявкаНаПриемку = дсфИдентификаторыЯндексМаркет.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.дсфЗаявкаНаПриемкуСвязанныеОбъектыЯМаркет КАК дсфЗаявкаНаПриемкуСвязанныеОбъектыЯМаркет
	               |		ПО ВТ_ЗаявкиНаПриемку.ЗаявкаНаПриемку = дсфЗаявкаНаПриемкуСвязанныеОбъектыЯМаркет.ЗаявкаНаПриемку
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОжидаемоеПоступление
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ЗаявкиНаПриемкуПолная.ЗаявкаНаПриемку КАК ЗаявкаНаПриемку,
	               |	ВТ_ЗаявкиНаПриемкуПолная.ЗаявкаНаПриемкуИдентификатор КАК ЗаявкаНаПриемкуИдентификатор,
	               |	ВТ_ЗаявкиНаПриемкуПолная.ИдентификаторВнешний КАК ИдентификаторВнешний,
	               |	ЕСТЬNULL(СтатусыДокументов.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ПустаяСсылка)) КАК Статус,
	               |	ЕСТЬNULL(СтатусыДокументов.ДатаИзменения, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаИзменения
	               |ИЗ
	               |	ВТ_ЗаявкиНаПриемкуПолная КАК ВТ_ЗаявкиНаПриемкуПолная
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументов КАК СтатусыДокументов
	               |		ПО ВТ_ЗаявкиНаПриемкуПолная.ОжидаемоеПоступление = СтатусыДокументов.Документ";
	
	Запрос.УстановитьПараметр("МассивЗаявок", Документы);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ИдентификаторСклада = дсфОбщегоНазначенияЯндексМаркет.ИдентификаторСклада();
	
	Пока Выборка.Следующий() Цикл
	
		СведенияОСтатусе = НовоеОписаниеСтатусаДокумента();
		СведенияОСтатусе["Документ"] = Выборка.ЗаявкаНаПриемку;
		СведенияОСтатусе["ИдентификаторДокумента"] = XMLСтрока(Выборка.ЗаявкаНаПриемкуИдентификатор);
		СведенияОСтатусе["ИдентификаторВнешний"] = Выборка.ИдентификаторВнешний;
		СведенияОСтатусе["ИдентификаторСклада"] = ИдентификаторСклада;
		СведенияОСтатусе["Статус"] = Выборка.Статус;
		СведенияОСтатусе["ДатаИзменения"] = Выборка.ДатаИзменения;
		
		РезультатЗапросаСтатусов["Статусы"].Добавить(СведенияОСтатусе);
		
	КонецЦикла;
		
	РезультатЗапросаСтатусов["Успех"] = Истина;
	
	Возврат РезультатЗапросаСтатусов;

КонецФункции

// Функция - Сведения о статусах приемок
//			Важно! Статус приемки определяется по статусу связанного с ней документа ОжидаемоеПоступление.
//			Связь должна быть зафиксирована в регистре сведений дсфЗаявкаНаПриемкуСвязанныеОбъектыЯМаркет
//
// Параметры:
//  Документы	 - Массив - 
// 
// Возвращаемое значение:
//   - Массив структур, см. dsf_ПолучениеСведений.НовыйРезультатЗапросаСтатусовПриемок
//
Функция ИсторияСтатусовПриемок(Документы) Экспорт

	РезультатЗапросаИсторииСтатусов = НовыйРезультатЗапросаИсторииСтатусовПриемок();
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	дсфЗаявкаНаПриемку.Ссылка КАК ЗаявкаНаПриемку,
	               |	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(дсфЗаявкаНаПриемку.Ссылка) КАК ЗаявкаНаПриемкуИдентификатор
	               |ПОМЕСТИТЬ ВТ_ЗаявкиНаПриемку
	               |ИЗ
	               |	Документ.дсфЗаявкаНаПриемку КАК дсфЗаявкаНаПриемку
	               |ГДЕ
	               |	дсфЗаявкаНаПриемку.Ссылка В(&МассивЗаявок)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ЗаявкаНаПриемку
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ЗаявкиНаПриемку.ЗаявкаНаПриемку КАК ЗаявкаНаПриемку,
	               |	ВТ_ЗаявкиНаПриемку.ЗаявкаНаПриемкуИдентификатор КАК ЗаявкаНаПриемкуИдентификатор,
	               |	ЕСТЬNULL(дсфИдентификаторыЯндексМаркет.Идентификатор, 0) КАК ИдентификаторВнешний,
	               |	ЕСТЬNULL(дсфЗаявкаНаПриемкуСвязанныеОбъектыЯМаркет.ОжидаемоеПоступление, НЕОПРЕДЕЛЕНО) КАК ОжидаемоеПоступление
	               |ПОМЕСТИТЬ ВТ_ЗаявкиНаПриемкуПолная
	               |ИЗ
	               |	ВТ_ЗаявкиНаПриемку КАК ВТ_ЗаявкиНаПриемку
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.дсфИдентификаторыЯндексМаркет КАК дсфИдентификаторыЯндексМаркет
	               |		ПО ВТ_ЗаявкиНаПриемку.ЗаявкаНаПриемку = дсфИдентификаторыЯндексМаркет.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.дсфЗаявкаНаПриемкуСвязанныеОбъектыЯМаркет КАК дсфЗаявкаНаПриемкуСвязанныеОбъектыЯМаркет
	               |		ПО ВТ_ЗаявкиНаПриемку.ЗаявкаНаПриемку = дсфЗаявкаНаПриемкуСвязанныеОбъектыЯМаркет.ЗаявкаНаПриемку
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОжидаемоеПоступление
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ЗаявкиНаПриемкуПолная.ЗаявкаНаПриемку КАК ЗаявкаНаПриемку,
	               |	ВТ_ЗаявкиНаПриемкуПолная.ЗаявкаНаПриемкуИдентификатор КАК ЗаявкаНаПриемкуИдентификатор,
	               |	ВТ_ЗаявкиНаПриемкуПолная.ИдентификаторВнешний КАК ИдентификаторВнешний,
	               |	ЕСТЬNULL(СтатусыДокументовИстория.ДатаИзменения, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаИзменения,
	               |	СтатусыДокументовИстория.Статус КАК Статус
	               |ИЗ
	               |	ВТ_ЗаявкиНаПриемкуПолная КАК ВТ_ЗаявкиНаПриемкуПолная
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовИстория КАК СтатусыДокументовИстория
	               |		ПО ВТ_ЗаявкиНаПриемкуПолная.ОжидаемоеПоступление = СтатусыДокументовИстория.Документ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ЗаявкаНаПриемку,
	               |	ДатаИзменения
	               |ИТОГИ
	               |	МИНИМУМ(ЗаявкаНаПриемкуИдентификатор),
	               |	МИНИМУМ(ИдентификаторВнешний)
	               |ПО
	               |	ЗаявкаНаПриемку";
	
	Запрос.УстановитьПараметр("МассивЗаявок", Документы);
	
	Результат = Запрос.Выполнить();
	ВыборкаПоПриемкам = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ИдентификаторСклада = дсфОбщегоНазначенияЯндексМаркет.ИдентификаторСклада();
	
	Пока ВыборкаПоПриемкам.Следующий() Цикл
		
		ИсторияСтатусаДокумента = НовоеОписаниеИсторииСтатусаДокумента();
		ИсторияСтатусаДокумента["Документ"] = ВыборкаПоПриемкам.ЗаявкаНаПриемку;
		ИсторияСтатусаДокумента["ИдентификаторДокумента"] = XMLСтрока(ВыборкаПоПриемкам.ЗаявкаНаПриемкуИдентификатор);
		ИсторияСтатусаДокумента["ИдентификаторВнешний"] = ВыборкаПоПриемкам.ИдентификаторВнешний;
		ИсторияСтатусаДокумента["ИдентификаторСклада"] = ИдентификаторСклада;
		
		ВыбокаПоСтатусам = ВыборкаПоПриемкам.Выбрать();
		Пока ВыбокаПоСтатусам.Следующий() Цикл
			СведенияОСтатусе = НовоеОписаниеСтатусаДокумента();
			СведенияОСтатусе["Документ"] = ВыбокаПоСтатусам.ЗаявкаНаПриемку;
			СведенияОСтатусе["ИдентификаторДокумента"] = XMLСтрока(ВыбокаПоСтатусам.ЗаявкаНаПриемкуИдентификатор);
			СведенияОСтатусе["ИдентификаторВнешний"] = ВыбокаПоСтатусам.ИдентификаторВнешний;
			СведенияОСтатусе["ИдентификаторСклада"] = ИдентификаторСклада;
			СведенияОСтатусе["Статус"] = ВыбокаПоСтатусам.Статус;
			СведенияОСтатусе["ДатаИзменения"] = ВыбокаПоСтатусам.ДатаИзменения;
	
			ИсторияСтатусаДокумента["Статусы"].Добавить(СведенияОСтатусе);

		КонецЦикла;
		
		РезультатЗапросаИсторииСтатусов["ИсторияСтатусовПриемок"].Добавить(ИсторияСтатусаДокумента);
		
	КонецЦикла;
		
	РезультатЗапросаИсторииСтатусов["Успех"] = Истина;
	
	Возврат РезультатЗапросаИсторииСтатусов;

КонецФункции

Функция ДеталиПриемкиПоЗаявке(ЗаявкаНаПриемку) Экспорт

	РезультатЗапросаДеталейПриемки = НовыйРезультатЗапросаДеталейПриемки();
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	дсфЗаявкаНаПриемку.Ссылка КАК ЗаявкаНаПриемку,
	               |	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(дсфЗаявкаНаПриемку.Ссылка) КАК ЗаявкаНаПриемкуИдентификатор,
	               |	ЕСТЬNULL(дсфИдентификаторыЯндексМаркет.Идентификатор, 0) КАК ЗаявкаНаПриемкуИдентификаторВнешний,
	               |	дсфЗаявкаНаПриемку.Номер КАК Номер,
	               |	дсфЗаявкаНаПриемку.Дата КАК Дата,
	               |	дсфЗаявкаНаПриемку.ТипПриемки КАК ТипПриемки,
	               |	дсфЗаявкаНаПриемку.ПериодДоставкиНачало КАК ПериодДоставкиНачало,
	               |	дсфЗаявкаНаПриемку.ПериодДоставкиОкончание КАК ПериодДоставкиОкончание,
	               |	дсфЗаявкаНаПриемку.ДатаОбновления КАК ДатаОбновления,
	               |	ЕСТЬNULL(дсфЗаявкаНаПриемкуСвязанныеОбъектыЯМаркет.ПланПоступления, НЕОПРЕДЕЛЕНО) КАК ПланПоступления,
	               |	ЕСТЬNULL(дсфЗаявкаНаПриемкуСвязанныеОбъектыЯМаркет.ОжидаемоеПоступление, НЕОПРЕДЕЛЕНО) КАК ОжидаемоеПоступление
	               |ПОМЕСТИТЬ ВТ_ЗаявкаНаПриемку
	               |ИЗ
	               |	Документ.дсфЗаявкаНаПриемку КАК дсфЗаявкаНаПриемку
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.дсфИдентификаторыЯндексМаркет КАК дсфИдентификаторыЯндексМаркет
	               |		ПО дсфЗаявкаНаПриемку.Ссылка = дсфИдентификаторыЯндексМаркет.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.дсфЗаявкаНаПриемкуСвязанныеОбъектыЯМаркет КАК дсфЗаявкаНаПриемкуСвязанныеОбъектыЯМаркет
	               |		ПО дсфЗаявкаНаПриемку.Ссылка = дсфЗаявкаНаПриемкуСвязанныеОбъектыЯМаркет.ЗаявкаНаПриемку
	               |ГДЕ
	               |	дсфЗаявкаНаПриемку.Ссылка = &ЗаявкаНаПриемку
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ЗаявкаНаПриемку
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ ПЕРВЫЕ 1
	               |	дсфВерсииРеестровПриемкиЯндексМаркет.ЗаявкаНаПриемку КАК ЗаявкаНаПриемку,
	               |	дсфВерсииРеестровПриемкиЯндексМаркет.ИдентификаторРеестра КАК ИдентификаторРеестра,
	               |	дсфВерсииРеестровПриемкиЯндексМаркет.ТипРеестра КАК ТипРеестра,
	               |	дсфВерсииРеестровПриемкиЯндексМаркет.ТипРеестраКод КАК ТипРеестраКод,
	               |	дсфВерсииРеестровПриемкиЯндексМаркет.ДатаРеестра КАК ДатаРеестра,
	               |	ВТ_ЗаявкаНаПриемку.ПланПоступления КАК ПланПоступления,
	               |	ЕСТЬNULL(ВТ_ЗаявкаНаПриемку.ПланПоступления.Комментарий, """") КАК ПланПоступленияКомментарий
	               |ПОМЕСТИТЬ ВТ_ВерсииРеестраПриемкиВходящие
	               |ИЗ
	               |	РегистрСведений.дсфВерсииРеестровПриемкиЯндексМаркет КАК дсфВерсииРеестровПриемкиЯндексМаркет
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗаявкаНаПриемку КАК ВТ_ЗаявкаНаПриемку
	               |		ПО дсфВерсииРеестровПриемкиЯндексМаркет.ЗаявкаНаПриемку = ВТ_ЗаявкаНаПриемку.ЗаявкаНаПриемку
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	дсфВерсииРеестровПриемкиЯндексМаркет.ДатаРеестра УБЫВ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ЗаявкаНаПриемку.ЗаявкаНаПриемку КАК ЗаявкаНаПриемку,
	               |	ВТ_ЗаявкаНаПриемку.ЗаявкаНаПриемкуИдентификатор КАК ЗаявкаНаПриемкуИдентификатор,
	               |	ВТ_ЗаявкаНаПриемку.ЗаявкаНаПриемкуИдентификаторВнешний КАК ЗаявкаНаПриемкуИдентификаторВнешний,
	               |	ВТ_ЗаявкаНаПриемку.Номер КАК Номер,
	               |	ВТ_ЗаявкаНаПриемку.Дата КАК Дата,
	               |	ВТ_ЗаявкаНаПриемку.ТипПриемки КАК ТипПриемки,
	               |	ВТ_ЗаявкаНаПриемку.ПериодДоставкиНачало КАК ПериодДоставкиНачало,
	               |	ВТ_ЗаявкаНаПриемку.ПериодДоставкиОкончание КАК ПериодДоставкиОкончание,
	               |	ВТ_ЗаявкаНаПриемку.ДатаОбновления КАК ДатаОбновления,
	               |	ВТ_ЗаявкаНаПриемку.ОжидаемоеПоступление КАК ОжидаемоеПоступление,
	               |	ВТ_ЗаявкаНаПриемку.ПланПоступления КАК ПланПоступления
	               |ИЗ
	               |	ВТ_ЗаявкаНаПриемку КАК ВТ_ЗаявкаНаПриемку
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВерсииРеестраПриемкиВходящие.ЗаявкаНаПриемку КАК ЗаявкаНаПриемку,
	               |	ВТ_ВерсииРеестраПриемкиВходящие.ИдентификаторРеестра КАК ИдентификаторРеестра,
	               |	ВТ_ВерсииРеестраПриемкиВходящие.ТипРеестра КАК ТипРеестра,
	               |	ВТ_ВерсииРеестраПриемкиВходящие.ТипРеестраКод КАК ТипРеестраКод,
	               |	ВТ_ВерсииРеестраПриемкиВходящие.ДатаРеестра КАК ДатаРеестра,
	               |	ВТ_ВерсииРеестраПриемкиВходящие.ПланПоступления КАК ПланПоступления,
	               |	ВТ_ВерсииРеестраПриемкиВходящие.ПланПоступленияКомментарий КАК ПланПоступленияКомментарий
	               |ИЗ
	               |	ВТ_ВерсииРеестраПриемкиВходящие КАК ВТ_ВерсииРеестраПриемкиВходящие";
	
	Запрос.УстановитьПараметр("ЗаявкаНаПриемку", ЗаявкаНаПриемку);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	РезультатДанныеОЗаявке = МассивРезультатов[2];	
	Если РезультатДанныеОЗаявке.Пустой() Тогда
		РезультатЗапросаДеталейПриемки["Успех"] = Ложь;
		РезультатЗапросаДеталейПриемки["Ошибки"].Добавить("Не найдены сведения о заявке на приемку");
		
		Возврат РезультатЗапросаДеталейПриемки;

	КонецЕсли;
	
	РезультатДанныеОРеестре = МассивРезультатов[3];	
	Если РезультатДанныеОРеестре.Пустой() Тогда
		РезультатЗапросаДеталейПриемки["Успех"] = Ложь;
		РезультатЗапросаДеталейПриемки["Ошибки"].Добавить("В системе не зарегистрирован входящий реестр приемки");
		
		Возврат РезультатЗапросаДеталейПриемки;

	КонецЕсли;
	
	
	// заявка на приемку
	Выборка = РезультатДанныеОЗаявке.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		РезультатЗапросаДеталейПриемки["ИдентификаторСклада"] = дсфОбщегоНазначенияЯндексМаркет.ИдентификаторСклада();

		РезультатЗапросаДеталейПриемки["ИдентификаторЗаявки"] = XMLСтрока(Выборка.ЗаявкаНаПриемкуИдентификатор);
		РезультатЗапросаДеталейПриемки["ИдентификаторЗаявкиВнешний"] = XMLСтрока(Выборка.ЗаявкаНаПриемкуИдентификаторВнешний);
		РезультатЗапросаДеталейПриемки["ТипПриемки"] = Выборка.ТипПриемки;
		РезультатЗапросаДеталейПриемки["ПериодДоставкиНачало"] = Выборка.ПериодДоставкиНачало;
		РезультатЗапросаДеталейПриемки["ПериодДоставкиОкончание"] = Выборка.ПериодДоставкиОкончание;
		
		Если ЗначениеЗаполнено(РезультатЗапросаДеталейПриемки["ПериодДоставкиНачало"]) 
			И ЗначениеЗаполнено(РезультатЗапросаДеталейПриемки["ПериодДоставкиОкончание"]) Тогда
			РезультатЗапросаДеталейПриемки["ПериодДоставкиСтрокой"] =
				XMLСтрока(РезультатЗапросаДеталейПриемки["ПериодДоставкиНачало"])
				+ "/"
				+ XMLСтрока(РезультатЗапросаДеталейПриемки["ПериодДоставкиОкончание"]);
				
		КонецЕсли;
		
		ОжидаемоеПоступление = Выборка.ОжидаемоеПоступление;

	КонецЦикла;
	
	// реестр
	ВыборкаПоРеестру = РезультатДанныеОРеестре.Выбрать();
	Пока ВыборкаПоРеестру.Следующий() Цикл
		
		РезультатЗапросаДеталейПриемки["ИдентификаторРеестра"] = XMLСтрока(ВыборкаПоРеестру.ПланПоступления);
		РезультатЗапросаДеталейПриемки["ИдентификаторРеестраВнешний"] = ВыборкаПоРеестру.ИдентификаторРеестра;
		РезультатЗапросаДеталейПриемки["КомментарийКРеестру"] = ВыборкаПоРеестру.ПланПоступленияКомментарий;
		
		// Важно! тип реестра определять по мстатусу плана поступления / ожидаемой приёмки
		СтатусПланаПоступления = СтатусыДокументовСервер.СтатусДокументаПоСсылке(ВыборкаПоРеестру.ПланПоступления);
		РезультатЗапросаДеталейПриемки["ТипРеестра"] = ВыборкаПоРеестру.ТипРеестра;
		
		// Важно! Уточнить, что будет являться датой фактического реестра
		// пока пишем дату плана
		РезультатЗапросаДеталейПриемки["ДатаРеестра"] = XMLСтрока(ВыборкаПоРеестру.ДатаРеестра);

	КонецЦикла;
		
	Если ЗначениеЗаполнено(ОжидаемоеПоступление) Тогда
		ТаблицаПланФактПоступления = ТаблицаПланФактОжидаемоеПоступление(ОжидаемоеПоступление);
		
		
		ТаблицаНоменклатуры = ТаблицаПланФактПоступления.Скопировать(, "Номенклатура,НоменклатураНаименование,НоменклатураАртикул");
		ТаблицаНоменклатуры.Свернуть("Номенклатура,НоменклатураНаименование,НоменклатураАртикул");
		
		Для каждого ТекСтрокаНоменклатуры Из ТаблицаНоменклатуры Цикл
			
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("Номенклатура", ТекСтрокаНоменклатуры["Номенклатура"]);
			
			МассивСтрокПланФакт = ТаблицаПланФактПоступления.НайтиСтроки(СтруктураПоиска);
			
			СведенияОКоличестве = Новый Соответствие;
			Для каждого ТекЭлемент Из МассивСтрокПланФакт Цикл
				ПринятоПоФакту = ТекЭлемент["Факт"]; 
				
				Если ПринятоПоФакту > 0 Тогда
					СтатусЕдиницыТовара = ТекЭлемент["СтатусЕдиницыТовара"];

					Если СведенияОКоличестве["СведенияОКоличестве"] = Неопределено Тогда
						СведенияОКоличестве.Вставить(СтатусЕдиницыТовара, ПринятоПоФакту);	
						
					Иначе
						СведенияОКоличестве["СведенияОКоличестве"] = СведенияОКоличестве["СведенияОКоличестве"] + ПринятоПоФакту;
					
					КонецЕсли;

				КонецЕсли;
			
			КонецЦикла;
			
			Если СведенияОКоличестве.Количество() > 0 Тогда // записи о принятом по факту количестве присутствуют
			
				ОписаниеПринятогоТовара = дсфСозданиеОбновлениеДанныхЯндексМаркет.НовоеОписаниеЭлементаСпискаТоваровВРеестре();
			
				ОписаниеПринятогоТовара["Наименование"] = ТекСтрокаНоменклатуры["НоменклатураНаименование"];
				ОписаниеПринятогоТовара["СведенияОКоличестве"] = СведенияОКоличестве;
				
				// идентификаторы номенклатуры
				ИдентификаторыТовара = Новый Соответствие;
				ИдентификаторыТовара.Вставить(Перечисления.дсфТипыИдентификаторовЯндексМаркет.ARTICLE, ТекСтрокаНоменклатуры["НоменклатураАртикул"]);
				ОписаниеПринятогоТовара["Идентификаторы"] = ИдентификаторыТовара;
				
				РезультатЗапросаДеталейПриемки["ПринятыеТовары"].Добавить(ОписаниеПринятогоТовара);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	РезультатЗапросаДеталейПриемки["Успех"] = Истина;
	
	Возврат РезультатЗапросаДеталейПриемки;

КонецФункции

// Функция - Сведения о статусах отгрузок
//			Важно! Статус заявки на отгрузку определяется по статусу связанного с ней документа ЗаказНаОтгрузку
//			Связь должна быть зафиксирована в регистре сведений дсфЗаявкаНаОтгрузкуСвязанныеОбъектыЯМаркет
//
// Параметры:
//  Документы	 - Массив - 
// 
// Возвращаемое значение:
//   - Массив структур, см. dsf_ПолучениеСведений.НовыйРезультатЗапросаСтатусовПриемок
//
Функция СведенияОСтатусахОтгрузок(Документы) Экспорт

	РезультатЗапросаСтатусов = НовыйРезультатЗапросаСтатусовДокументов();
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	дсфЗаявкаНаОтгрузку.Ссылка КАК ЗаявкаНаОтгрузку,
	               |	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(дсфЗаявкаНаОтгрузку.Ссылка) КАК ЗаявкаНаОтгрузкуИдентификатор
	               |ПОМЕСТИТЬ ВТ_ЗаявкиНаОтгрузку
	               |ИЗ
	               |	Документ.дсфЗаявкаНаОтгрузку КАК дсфЗаявкаНаОтгрузку
	               |ГДЕ
	               |	дсфЗаявкаНаОтгрузку.Ссылка В(&МассивЗаявок)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ЗаявкаНаОтгрузку
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ЗаявкиНаОтгрузку.ЗаявкаНаОтгрузку КАК ЗаявкаНаОтгрузку,
	               |	ВТ_ЗаявкиНаОтгрузку.ЗаявкаНаОтгрузкуИдентификатор КАК ЗаявкаНаОтгрузкуИдентификатор,
	               |	ЕСТЬNULL(дсфИдентификаторыЯндексМаркет.Идентификатор, 0) КАК ИдентификаторВнешний,
	               |	ЕСТЬNULL(дсфЗаявкаНаОтгрузкуСвязанныеОбъектыЯМаркет.ЗаказНаОтгрузку, НЕОПРЕДЕЛЕНО) КАК ЗаказНаОтгрузку
	               |ПОМЕСТИТЬ ВТ_ЗаявкиНаОтгрузкуПолная
	               |ИЗ
	               |	ВТ_ЗаявкиНаОтгрузку КАК ВТ_ЗаявкиНаОтгрузку
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.дсфИдентификаторыЯндексМаркет КАК дсфИдентификаторыЯндексМаркет
	               |		ПО ВТ_ЗаявкиНаОтгрузку.ЗаявкаНаОтгрузку = дсфИдентификаторыЯндексМаркет.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.дсфЗаявкаНаОтгрузкуСвязанныеОбъектыЯМаркет КАК дсфЗаявкаНаОтгрузкуСвязанныеОбъектыЯМаркет
	               |		ПО ВТ_ЗаявкиНаОтгрузку.ЗаявкаНаОтгрузку = дсфЗаявкаНаОтгрузкуСвязанныеОбъектыЯМаркет.ЗаявкаНаОтгрузку
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ЗаказНаОтгрузку
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ЗаявкиНаОтгрузкуПолная.ЗаявкаНаОтгрузку КАК ЗаявкаНаОтгрузку,
	               |	ВТ_ЗаявкиНаОтгрузкуПолная.ЗаявкаНаОтгрузкуИдентификатор КАК ЗаявкаНаОтгрузкуИдентификатор,
	               |	ВТ_ЗаявкиНаОтгрузкуПолная.ИдентификаторВнешний КАК ИдентификаторВнешний,
	               |	ЕСТЬNULL(СтатусыДокументов.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ПустаяСсылка)) КАК Статус,
	               |	ЕСТЬNULL(СтатусыДокументов.ДатаИзменения, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаИзменения
	               |ИЗ
	               |	ВТ_ЗаявкиНаОтгрузкуПолная КАК ВТ_ЗаявкиНаОтгрузкуПолная
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументов КАК СтатусыДокументов
	               |		ПО ВТ_ЗаявкиНаОтгрузкуПолная.ЗаказНаОтгрузку = СтатусыДокументов.Документ";
	
	Запрос.УстановитьПараметр("МассивЗаявок", Документы);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ИдентификаторСклада = дсфОбщегоНазначенияЯндексМаркет.ИдентификаторСклада();
	
	Пока Выборка.Следующий() Цикл
	
		СведенияОСтатусе = НовоеОписаниеСтатусаДокумента();
		СведенияОСтатусе["Документ"] = Выборка.ЗаявкаНаОтгрузку;
		СведенияОСтатусе["ИдентификаторДокумента"] = XMLСтрока(Выборка.ЗаявкаНаОтгрузкуИдентификатор);
		СведенияОСтатусе["ИдентификаторВнешний"] = Выборка.ИдентификаторВнешний;
		СведенияОСтатусе["ИдентификаторСклада"] = ИдентификаторСклада;
		СведенияОСтатусе["Статус"] = Выборка.Статус;
		СведенияОСтатусе["ДатаИзменения"] = Выборка.ДатаИзменения;
		
		РезультатЗапросаСтатусов["Статусы"].Добавить(СведенияОСтатусе);
		
	КонецЦикла;
		
	РезультатЗапросаСтатусов["Успех"] = Истина;
	
	Возврат РезультатЗапросаСтатусов;

КонецФункции

// Функция - Сведения о статусах отгрузок
//			Важно! Статус отгрузку определяется по статусу связанного с ней документа ЗаказНаОтгрузку.
//			Связь должна быть зафиксирована в регистре сведений дсфЗаявкаНаОтгрузкуСвязанныеОбъектыЯМаркет
//
// Параметры:
//  Документы	 - Массив - 
// 
// Возвращаемое значение:
//   - Массив структур, см. dsf_ПолучениеСведений.НовоеОписаниеИсторииСтатусаДокумента
//
Функция ИсторияСтатусовОтгрузок(Документы) Экспорт

	РезультатЗапросаИсторииСтатусов = НовыйРезультатЗапросаИсторииСтатусовОтгрузок();
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	дсфЗаявкаНаОтгрузку.Ссылка КАК ЗаявкаНаОтгрузку,
	               |	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(дсфЗаявкаНаОтгрузку.Ссылка) КАК ЗаявкаНаОтгрузкуИдентификатор
	               |ПОМЕСТИТЬ ВТ_ЗаявкиНаОтрузку
	               |ИЗ
	               |	Документ.дсфЗаявкаНаОтгрузку КАК дсфЗаявкаНаОтгрузку
	               |ГДЕ
	               |	дсфЗаявкаНаОтгрузку.Ссылка В(&МассивЗаявок)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ЗаявкаНаОтгрузку
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ЗаявкиНаОтрузку.ЗаявкаНаОтгрузку КАК ЗаявкаНаОтгрузку,
	               |	ВТ_ЗаявкиНаОтрузку.ЗаявкаНаОтгрузкуИдентификатор КАК ЗаявкаНаОтгрузкуИдентификатор,
	               |	ЕСТЬNULL(дсфИдентификаторыЯндексМаркет.Идентификатор, 0) КАК ИдентификаторВнешний,
	               |	ЕСТЬNULL(дсфЗаявкаНаОтгрузкуСвязанныеОбъектыЯМаркет.ЗаказНаОтгрузку, НЕОПРЕДЕЛЕНО) КАК ЗаказНаОтгрузку
	               |ПОМЕСТИТЬ ВТ_ЗаявкиНаОтгрузкуПолная
	               |ИЗ
	               |	ВТ_ЗаявкиНаОтрузку КАК ВТ_ЗаявкиНаОтрузку
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.дсфИдентификаторыЯндексМаркет КАК дсфИдентификаторыЯндексМаркет
	               |		ПО ВТ_ЗаявкиНаОтрузку.ЗаявкаНаОтгрузку = дсфИдентификаторыЯндексМаркет.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.дсфЗаявкаНаОтгрузкуСвязанныеОбъектыЯМаркет КАК дсфЗаявкаНаОтгрузкуСвязанныеОбъектыЯМаркет
	               |		ПО ВТ_ЗаявкиНаОтрузку.ЗаявкаНаОтгрузку = дсфЗаявкаНаОтгрузкуСвязанныеОбъектыЯМаркет.ЗаявкаНаОтгрузку
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ЗаказНаОтгрузку
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ЗаявкиНаОтгрузкуПолная.ЗаявкаНаОтгрузку КАК ЗаявкаНаОтгрузку,
	               |	ВТ_ЗаявкиНаОтгрузкуПолная.ЗаявкаНаОтгрузкуИдентификатор КАК ЗаявкаНаОтгрузкуИдентификатор,
	               |	ВТ_ЗаявкиНаОтгрузкуПолная.ИдентификаторВнешний КАК ИдентификаторВнешний,
	               |	ЕСТЬNULL(СтатусыДокументовИстория.ДатаИзменения, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаИзменения,
	               |	СтатусыДокументовИстория.Статус КАК Статус
	               |ИЗ
	               |	ВТ_ЗаявкиНаОтгрузкуПолная КАК ВТ_ЗаявкиНаОтгрузкуПолная
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовИстория КАК СтатусыДокументовИстория
	               |		ПО ВТ_ЗаявкиНаОтгрузкуПолная.ЗаказНаОтгрузку = СтатусыДокументовИстория.Документ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ЗаявкаНаОтгрузку,
	               |	ДатаИзменения
	               |ИТОГИ
	               |	МИНИМУМ(ЗаявкаНаОтгрузкуИдентификатор),
	               |	МИНИМУМ(ИдентификаторВнешний)
	               |ПО
	               |	ЗаявкаНаОтгрузку";
	
	Запрос.УстановитьПараметр("МассивЗаявок", Документы);
	
	Результат = Запрос.Выполнить();
	ВыборкаПоОтгрузкам = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ИдентификаторСклада = дсфОбщегоНазначенияЯндексМаркет.ИдентификаторСклада();
	
	Пока ВыборкаПоОтгрузкам.Следующий() Цикл
		
		ИсторияСтатусаДокумента = НовоеОписаниеИсторииСтатусаДокумента();
		ИсторияСтатусаДокумента["Документ"] = ВыборкаПоОтгрузкам.ЗаявкаНаОтгрузку;
		ИсторияСтатусаДокумента["ИдентификаторДокумента"] = XMLСтрока(ВыборкаПоОтгрузкам.ЗаявкаНаОтгрузкуИдентификатор);
		ИсторияСтатусаДокумента["ИдентификаторВнешний"] = ВыборкаПоОтгрузкам.ИдентификаторВнешний;
		ИсторияСтатусаДокумента["ИдентификаторСклада"] = ИдентификаторСклада;
		
		ВыбокаПоСтатусам = ВыборкаПоОтгрузкам.Выбрать();
		Пока ВыбокаПоСтатусам.Следующий() Цикл
			СведенияОСтатусе = НовоеОписаниеСтатусаДокумента();
			СведенияОСтатусе["Документ"] = ВыбокаПоСтатусам.ЗаявкаНаОтгрузку;
			СведенияОСтатусе["ИдентификаторДокумента"] = XMLСтрока(ВыбокаПоСтатусам.ЗаявкаНаОтгрузкуИдентификатор);
			СведенияОСтатусе["ИдентификаторВнешний"] = ВыбокаПоСтатусам.ИдентификаторВнешний;
			СведенияОСтатусе["ИдентификаторСклада"] = ИдентификаторСклада;
			СведенияОСтатусе["Статус"] = ВыбокаПоСтатусам.Статус;
			СведенияОСтатусе["ДатаИзменения"] = ВыбокаПоСтатусам.ДатаИзменения;
	
			ИсторияСтатусаДокумента["Статусы"].Добавить(СведенияОСтатусе);

		КонецЦикла;
		
		РезультатЗапросаИсторииСтатусов["ИсторияСтатусовОтгрузок"].Добавить(ИсторияСтатусаДокумента);
		
	КонецЦикла;
	
	Если РезультатЗапросаИсторииСтатусов["ИсторияСтатусовОтгрузок"].Количество() > 0 Тогда
		РезультатЗапросаИсторииСтатусов["Успех"] = Истина;
	
	Иначе
		ТекстОшибки = "Сведения по статусам документов отсутствуют";
		РезультатЗапросаИсторииСтатусов["Ошибки"].Добавить(ТекстОшибки);

		РезультатЗапросаИсторииСтатусов["Успех"] = Ложь;

	КонецЕсли;
		
	Возврат РезультатЗапросаИсторииСтатусов;

КонецФункции

Функция ДеталиОтгрузкиПоЗаявке(ЗаявкаНаОтгрузку) Экспорт

	РезультатЗапросаДеталейОтгрузки = НовыйРезультатЗапросаДеталейОтгрузки();
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	дсфЗаявкаНаОтгрузку.Ссылка КАК ЗаявкаНаОтгрузку,
	               |	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(дсфЗаявкаНаОтгрузку.Ссылка) КАК ЗаявкаНаОтгрузкуИдентификатор,
	               |	ЕСТЬNULL(дсфИдентификаторыЯндексМаркет.Идентификатор, 0) КАК ЗаявкаНаОтгрузкуИдентификаторВнешний,
	               |	дсфЗаявкаНаОтгрузку.Номер КАК Номер,
	               |	дсфЗаявкаНаОтгрузку.Дата КАК Дата,
	               |	дсфЗаявкаНаОтгрузку.ТипОтправки КАК ТипОтправки,
	               |	дсфЗаявкаНаОтгрузку.ПериодОтправкиНачало КАК ПериодОтправкиНачало,
	               |	дсфЗаявкаНаОтгрузку.ПериодОтправкиОкончание КАК ПериодОтправкиОкончание,
	               |	дсфЗаявкаНаОтгрузку.ДатаОбновления КАК ДатаОбновления,
	               |	ЕСТЬNULL(дсфЗаявкаНаОтгрузкуСвязанныеОбъектыЯМаркет.ПланОтгрузки, НЕОПРЕДЕЛЕНО) КАК ПланОтгрузки,
	               |	ЕСТЬNULL(дсфЗаявкаНаОтгрузкуСвязанныеОбъектыЯМаркет.ЗаказНаОтгрузку, НЕОПРЕДЕЛЕНО) КАК ЗаказНаОтгрузку
	               |ПОМЕСТИТЬ ВТ_ЗаявкаНаОтгрузку
	               |ИЗ
	               |	Документ.дсфЗаявкаНаОтгрузку КАК дсфЗаявкаНаОтгрузку
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.дсфИдентификаторыЯндексМаркет КАК дсфИдентификаторыЯндексМаркет
	               |		ПО дсфЗаявкаНаОтгрузку.Ссылка = дсфИдентификаторыЯндексМаркет.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.дсфЗаявкаНаОтгрузкуСвязанныеОбъектыЯМаркет КАК дсфЗаявкаНаОтгрузкуСвязанныеОбъектыЯМаркет
	               |		ПО дсфЗаявкаНаОтгрузку.Ссылка = дсфЗаявкаНаОтгрузкуСвязанныеОбъектыЯМаркет.ЗаявкаНаОтгрузку
	               |ГДЕ
	               |	дсфЗаявкаНаОтгрузку.Ссылка = &ЗаявкаНаОтгрузку
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ЗаявкаНаОтгрузку
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ ПЕРВЫЕ 1
	               |	дсфВерсииРеестровОтгрузкиЯндексМаркет.ЗаявкаНаОтгрузку КАК ЗаявкаНаОтгрузку,
	               |	дсфВерсииРеестровОтгрузкиЯндексМаркет.ИдентификаторРеестра КАК ИдентификаторРеестра,
	               |	дсфВерсииРеестровОтгрузкиЯндексМаркет.ТипРеестра КАК ТипРеестра,
	               |	дсфВерсииРеестровОтгрузкиЯндексМаркет.ТипРеестраКод КАК ТипРеестраКод,
	               |	дсфВерсииРеестровОтгрузкиЯндексМаркет.ДатаРеестра КАК ДатаРеестра,
	               |	ВТ_ЗаявкаНаОтгрузку.ПланОтгрузки КАК ПланОтгрузки,
	               |	ЕСТЬNULL(ВТ_ЗаявкаНаОтгрузку.ПланОтгрузки.Комментарий, """") КАК ПланОтгрузкиКомментарий
	               |ПОМЕСТИТЬ ВТ_ВерсииРеестраОтгрузкиВходящие
	               |ИЗ
	               |	РегистрСведений.дсфВерсииРеестровОтгрузкиЯндексМаркет КАК дсфВерсииРеестровОтгрузкиЯндексМаркет
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗаявкаНаОтгрузку КАК ВТ_ЗаявкаНаОтгрузку
	               |		ПО дсфВерсииРеестровОтгрузкиЯндексМаркет.ЗаявкаНаОтгрузку = ВТ_ЗаявкаНаОтгрузку.ЗаявкаНаОтгрузку
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	дсфВерсииРеестровОтгрузкиЯндексМаркет.ДатаРеестра УБЫВ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	дсфЗаявкаНаОтгрузку.ЗаявкаНаОтгрузку КАК ЗаявкаНаОтгрузку,
	               |	дсфЗаявкаНаОтгрузку.ЗаявкаНаОтгрузкуИдентификатор КАК ЗаявкаНаОтгрузкуИдентификатор,
	               |	дсфЗаявкаНаОтгрузку.ЗаявкаНаОтгрузкуИдентификаторВнешний КАК ЗаявкаНаОтгрузкуИдентификаторВнешний,
	               |	дсфЗаявкаНаОтгрузку.Номер КАК Номер,
	               |	дсфЗаявкаНаОтгрузку.Дата КАК Дата,
	               |	дсфЗаявкаНаОтгрузку.ТипОтправки КАК ТипОтправки,
	               |	дсфЗаявкаНаОтгрузку.ПериодОтправкиНачало КАК ПериодОтправкиНачало,
	               |	дсфЗаявкаНаОтгрузку.ПериодОтправкиОкончание КАК ПериодОтправкиОкончание,
	               |	дсфЗаявкаНаОтгрузку.ДатаОбновления КАК ДатаОбновления,
	               |	дсфЗаявкаНаОтгрузку.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,
	               |	дсфЗаявкаНаОтгрузку.ПланОтгрузки КАК ПланОтгрузки
	               |ИЗ
	               |	ВТ_ЗаявкаНаОтгрузку КАК дсфЗаявкаНаОтгрузку
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВерсииРеестраОтгрузкиВходящие.ЗаявкаНаОтгрузку КАК ЗаявкаНаОтгрузку,
	               |	ВТ_ВерсииРеестраОтгрузкиВходящие.ИдентификаторРеестра КАК ИдентификаторРеестра,
	               |	ВТ_ВерсииРеестраОтгрузкиВходящие.ТипРеестра КАК ТипРеестра,
	               |	ВТ_ВерсииРеестраОтгрузкиВходящие.ТипРеестраКод КАК ТипРеестраКод,
	               |	ВТ_ВерсииРеестраОтгрузкиВходящие.ДатаРеестра КАК ДатаРеестра,
	               |	ВТ_ВерсииРеестраОтгрузкиВходящие.ПланОтгрузки КАК ПланОтгрузки,
	               |	ВТ_ВерсииРеестраОтгрузкиВходящие.ПланОтгрузкиКомментарий КАК ПланОтгрузкиКомментарий
	               |ИЗ
	               |	ВТ_ВерсииРеестраОтгрузкиВходящие КАК ВТ_ВерсииРеестраОтгрузкиВходящие";
	
	Запрос.УстановитьПараметр("ЗаявкаНаОтгрузку", ЗаявкаНаОтгрузку);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	РезультатДанныеОЗаявке = МассивРезультатов[2];
	Если РезультатДанныеОЗаявке.Пустой() Тогда
		РезультатЗапросаДеталейОтгрузки["Успех"] = Ложь;
		РезультатЗапросаДеталейОтгрузки["Ошибки"].Добавить("Не найдены сведения о заявке на отгрузку");
		
		Возврат РезультатЗапросаДеталейОтгрузки;

	КонецЕсли;
	
	РезультатДанныеОРеестре = МассивРезультатов[3];
	Если РезультатДанныеОРеестре.Пустой() Тогда
		РезультатЗапросаДеталейОтгрузки["Успех"] = Ложь;
		РезультатЗапросаДеталейОтгрузки["Ошибки"].Добавить("В системе не зарегистрирован входящий реестр отгрузки");
		
		Возврат РезультатЗапросаДеталейОтгрузки;

	КонецЕсли;
		
	// заявка на отгрузку
	Выборка = РезультатДанныеОЗаявке.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		РезультатЗапросаДеталейОтгрузки["ИдентификаторСклада"] = дсфОбщегоНазначенияЯндексМаркет.ИдентификаторСклада();

		РезультатЗапросаДеталейОтгрузки["ИдентификаторЗаявки"] = XMLСтрока(Выборка.ЗаявкаНаОтгрузкуИдентификатор);
		РезультатЗапросаДеталейОтгрузки["ИдентификаторЗаявкиВнешний"] = XMLСтрока(Выборка.ЗаявкаНаОтгрузкуИдентификаторВнешний);
		РезультатЗапросаДеталейОтгрузки["ТипОтправки"] = Выборка.ТипОтправки;
		РезультатЗапросаДеталейОтгрузки["ПериодОтправкиНачало"] = Выборка.ПериодОтправкиНачало;
		РезультатЗапросаДеталейОтгрузки["ПериодОтправкиОкончание"] = Выборка.ПериодОтправкиОкончание;
		
		Если ЗначениеЗаполнено(РезультатЗапросаДеталейОтгрузки["ПериодОтправкиНачало"]) 
			И ЗначениеЗаполнено(РезультатЗапросаДеталейОтгрузки["ПериодОтправкиОкончание"]) Тогда
			РезультатЗапросаДеталейОтгрузки["ПериодОтправкиСтрокой"] =
				XMLСтрока(РезультатЗапросаДеталейОтгрузки["ПериодОтправкиНачало"])
				+ "/"
				+ XMLСтрока(РезультатЗапросаДеталейОтгрузки["ПериодОтправкиОкончание"]);
				
		КонецЕсли;
		
		ЗаказНаОтгрузку = Выборка.ЗаказНаОтгрузку;

	КонецЦикла;
	
	// реестр
	ВыборкаПоРеестру = РезультатДанныеОРеестре.Выбрать();
	Пока ВыборкаПоРеестру.Следующий() Цикл
		
		РезультатЗапросаДеталейОтгрузки["ИдентификаторРеестра"] = XMLСтрока(ВыборкаПоРеестру.ПланОтгрузки);
		РезультатЗапросаДеталейОтгрузки["ИдентификаторРеестраВнешний"] = ВыборкаПоРеестру.ИдентификаторРеестра;
		РезультатЗапросаДеталейОтгрузки["КомментарийКРеестру"] = ВыборкаПоРеестру.ПланОтгрузкиКомментарий;
		
		// Важно! тип реестра определять по мстатусу плана поступления / ожидаемой приёмки
		СтатусПланаОтгрузки = СтатусыДокументовСервер.СтатусДокументаПоСсылке(ВыборкаПоРеестру.ПланОтгрузки);
		РезультатЗапросаДеталейОтгрузки["ТипРеестра"] = ВыборкаПоРеестру.ТипРеестра;
		
		// Важно! Уточнить, что будет являться датой фактического реестра
		// пока пишем дату плана
		РезультатЗапросаДеталейОтгрузки["ДатаРеестра"] = XMLСтрока(ВыборкаПоРеестру.ДатаРеестра);

	КонецЦикла;
		
	Если ЗначениеЗаполнено(ЗаказНаОтгрузку) Тогда
		ТаблицаПланФактОтгрузки = ТаблицаПланФактЗаказНаОтгрузку(ЗаказНаОтгрузку);
		
		ТаблицаНоменклатуры = ТаблицаПланФактОтгрузки.Скопировать(, "Номенклатура,НоменклатураНаименование,НоменклатураАртикул");
		ТаблицаНоменклатуры.Свернуть("Номенклатура,НоменклатураНаименование,НоменклатураАртикул");
		
		Для каждого ТекСтрокаНоменклатуры Из ТаблицаНоменклатуры Цикл
			
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("Номенклатура", ТекСтрокаНоменклатуры["Номенклатура"]);
			
			МассивСтрокПланФакт = ТаблицаПланФактОтгрузки.НайтиСтроки(СтруктураПоиска);
			
			СведенияОКоличестве = Новый Соответствие;
			Для каждого ТекЭлемент Из МассивСтрокПланФакт Цикл
				ОтгруженоПоФакту = ТекЭлемент["Факт"]; 
				
				Если ОтгруженоПоФакту > 0 Тогда
					СтатусЕдиницыТовара = ТекЭлемент["СтатусЕдиницыТовара"];

					Если СведенияОКоличестве["СведенияОКоличестве"] = Неопределено Тогда
						СведенияОКоличестве.Вставить(СтатусЕдиницыТовара, ОтгруженоПоФакту);	
						
					Иначе
						СведенияОКоличестве["СведенияОКоличестве"] = СведенияОКоличестве["СведенияОКоличестве"] + ОтгруженоПоФакту;
					
					КонецЕсли;

				КонецЕсли;
			
			КонецЦикла;
			
			Если СведенияОКоличестве.Количество() > 0 Тогда // записи об отгруженом по факту количестве присутствуют
			
				ОписаниеПринятогоТовара = дсфСозданиеОбновлениеДанныхЯндексМаркет.НовоеОписаниеЭлементаСпискаТоваровВРеестре();
			
				ОписаниеПринятогоТовара["Наименование"] = ТекСтрокаНоменклатуры["НоменклатураНаименование"];
				ОписаниеПринятогоТовара["СведенияОКоличестве"] = СведенияОКоличестве;
				
				// идентификаторы номенклатуры
				ИдентификаторыТовара = Новый Соответствие;
				ИдентификаторыТовара.Вставить(Перечисления.дсфТипыИдентификаторовЯндексМаркет.ARTICLE, ТекСтрокаНоменклатуры["НоменклатураАртикул"]);
				ОписаниеПринятогоТовара["Идентификаторы"] = ИдентификаторыТовара;
				
				РезультатЗапросаДеталейОтгрузки["ОтгруженныеТовары"].Добавить(ОписаниеПринятогоТовара);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	РезультатЗапросаДеталейОтгрузки["Успех"] = Истина;
	
	Возврат РезультатЗапросаДеталейОтгрузки;

КонецФункции

// Функция - Массив сведений об остатках товаров
//
// Параметры:
//  КоличествоЗаписей			 - 	 - 
//  Смещение					 - 	 - 
//  ТаблицаНоменклатураДляОтбора - ТаблицаЗначений - 
// 
// Возвращаемое значение:
//   - 
//
Функция СведенияОбОстаткахТоваров(КоличествоЗаписей = 20,
										Смещение = 0,
										ТаблицаНоменклатураДляОтбора = Неопределено) Экспорт
										
										
	РезультатЗапросаСведений = НовыйРезультатЗапросаОстатковТоваров();
	
	УстановитьПривилегированныйРежим(Истина);
	
	Поклажедатель = дсфОбщегоНазначенияЯндексМаркет.ПоклажедательПоУмолчанию();
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ЗапросВыборкаЭлементов = Новый Запрос;
	ЗапросВыборкаЭлементов.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	// в том случае, если указан отбор по номенклатуре, используем его, иначе формирование страницы для выдачи
	Если ТаблицаНоменклатураДляОтбора = Неопределено Или ТаблицаНоменклатураДляОтбора.Количество() = 0 Тогда
		ТекстЗапроса = "ВЫБРАТЬ
		               |	ОбъектыХранения.Ссылка КАК ОбъектХраненияСсылка,
		               |	ОбъектыХранения.Артикул КАК Артикул
		               |ПОМЕСТИТЬ ВТ_ТаблицаОХПолная
		               |ИЗ
		               |	Справочник.ОбъектыХранения КАК ОбъектыХранения
		               |ГДЕ
		               |	ОбъектыХранения.Организация = &Организация
		               |	И ОбъектыХранения.ЭтоГруппа = ЛОЖЬ
		               |	И СОКРЛП(ОбъектыХранения.Артикул) <> """"
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	ОбъектХраненияСсылка
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ ПЕРВЫЕ 0
		               |	ВТ_ТаблицаОХПолная.ОбъектХраненияСсылка КАК ОбъектХраненияСсылка,
		               |	ВТ_ТаблицаОХПолная.Артикул КАК Артикул
		               |ПОМЕСТИТЬ ВТ_ТаблицаОХСдвиг
		               |ИЗ
		               |	ВТ_ТаблицаОХПолная КАК ВТ_ТаблицаОХПолная
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	ОбъектХраненияСсылка
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ ПЕРВЫЕ 20
		               |	ВТ_ТаблицаОХПолная.ОбъектХраненияСсылка КАК ОбъектХраненияСсылка,
		               |	ВТ_ТаблицаОХПолная.Артикул КАК Артикул
		               |ПОМЕСТИТЬ ВТ_ОбъектыХранения
		               |ИЗ
		               |	ВТ_ТаблицаОХПолная КАК ВТ_ТаблицаОХПолная
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаОХСдвиг КАК ВТ_ТаблицаОХСдвиг
		               |		ПО ВТ_ТаблицаОХПолная.ОбъектХраненияСсылка = ВТ_ТаблицаОХСдвиг.ОбъектХраненияСсылка
		               |ГДЕ
		               |	ВТ_ТаблицаОХСдвиг.ОбъектХраненияСсылка ЕСТЬ NULL
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	ОбъектХраненияСсылка
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |УНИЧТОЖИТЬ ВТ_ТаблицаОХПолная
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |УНИЧТОЖИТЬ ВТ_ТаблицаОХСдвиг";
		
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПЕРВЫЕ 0", "ПЕРВЫЕ " + Формат(Смещение, "ЧДЦ=0; ЧН=; ЧГ=0"));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПЕРВЫЕ 20", "ПЕРВЫЕ " +Формат(КоличествоЗаписей, "ЧДЦ=0; ЧН=; ЧГ=0"));
		
		ЗапросВыборкаЭлементов.УстановитьПараметр("Организация", Поклажедатель);

	Иначе
		ТекстЗапроса = "ВЫБРАТЬ
		               |	Номенклатура.Ссылка КАК НоменклатураСсылка
		               |ПОМЕСТИТЬ ВТ_ТаблицаНоменклатуры
		               |ИЗ
		               |	&ТаблицаИдентификаторовНоменклатуры КАК ТаблицаИдентификаторовНоменклатуры
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
		               |		ПО ТаблицаИдентификаторовНоменклатуры.Артикул = Номенклатура.Артикул
		               |ГДЕ
		               |	Номенклатура.Организация = &Организация
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	НоменклатураСсылка
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ОбъектыХранения.Ссылка КАК ОбъектХраненияСсылка,
		               |	ОбъектыХранения.Артикул КАК Артикул
		               |ПОМЕСТИТЬ ВТ_ОбъектыХранения
		               |ИЗ
		               |	ВТ_ТаблицаНоменклатуры КАК ВТ_ТаблицаНоменклатуры
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыХранения КАК ОбъектыХранения
		               |		ПО ВТ_ТаблицаНоменклатуры.НоменклатураСсылка = ОбъектыХранения.Номенклатура
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	ОбъектХраненияСсылка
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |УНИЧТОЖИТЬ ВТ_ТаблицаНоменклатуры";
		
		ЗапросВыборкаЭлементов.УстановитьПараметр("ТаблицаИдентификаторовНоменклатуры", ТаблицаНоменклатураДляОтбора);
		ЗапросВыборкаЭлементов.УстановитьПараметр("Организация", Поклажедатель);
		
	КонецЕсли;
	
	ЗапросВыборкаЭлементов.Текст = ТекстЗапроса;
	
	ЗапросВыборкаЭлементов.ВыполнитьПакет();
	
	// основной запрос
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВТ_ОбъектыХранения.ОбъектХраненияСсылка КАК ОбъектХранения,
	|	ЕСТЬNULL(ВТ_ОбъектыХранения.Артикул, """") КАК Артикул,
	|	Остатки.Состояние КАК Состояние,
	|	Остатки.Партия КАК Партия,
	|	Остатки.МестоХранения КАК МестоХранения,
	|	ЕСТЬNULL(Остатки.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(Остатки.ПланРасход, 0) КАК ПланРасход,
	|	ЕСТЬNULL(Остатки.ПланПриход, 0) КАК ПланПриход,
	|	ЕСТЬNULL(Остатки.ДатаИзменения, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаИзменения,
	|	дсфСоответствиеСостоянийОбъектовХраненияКодамЯндексМаркет.ТипСтока КАК ТипСтока,
	|	дсфСоответствиеСостоянийОбъектовХраненияКодамЯндексМаркет.СтатусЕдиницыТовара КАК СтатусЕдиницыТовара
	|ИЗ
	|	ВТ_ОбъектыХранения КАК ВТ_ОбъектыХранения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Остатки КАК Остатки
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.дсфСоответствиеСостоянийОбъектовХраненияКодамЯндексМаркет КАК дсфСоответствиеСостоянийОбъектовХраненияКодамЯндексМаркет
	|			ПО Остатки.Состояние = дсфСоответствиеСостоянийОбъектовХраненияКодамЯндексМаркет.СостояниеОбъектовХранения
	|		ПО ВТ_ОбъектыХранения.ОбъектХраненияСсылка = Остатки.ОбъектХранения
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОбъектХранения
	|ИТОГИ
	|	МАКСИМУМ(Артикул),
	|	СУММА(Количество),
	|	СУММА(ПланРасход),
	|	СУММА(ПланПриход),
	|	МАКСИМУМ(ДатаИзменения),
	|	МАКСИМУМ(ТипСтока)
	|ПО
	|	ОбъектХранения,
	|	Состояние";

	Запрос.Текст = ТекстЗапроса;
	
	Результат = Запрос.ВыполнитьПакет();
	
	РезультатПоОстаткам = Результат[0];
	
	ВыборкаПоОбъектамХранения = РезультатПоОстаткам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоОбъектамХранения.Следующий() Цикл
		
		ОписаниеОстатковТоваров = НовоеОписаниеОстатковТовара();
		ОписаниеОстатковТоваров["ИдентификаторТовара"] = ВыборкаПоОбъектамХранения.Артикул;
		
		ВыборкаПоСостояниямОХ = ВыборкаПоОбъектамХранения.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
		Пока ВыборкаПоСостояниямОХ.Следующий() Цикл
			
			ОписаниеКоличества = НовоеОписаниеОстаткаКоличестваТовара();
			
			ОписаниеКоличества["ТипСтока"] = дсфОбщегоНазначенияЯндексМаркет.КодТипаСтокаЯндексМаркетСлужебный(ВыборкаПоСостояниямОХ.ТипСтока);
			ОписаниеКоличества["Количество"] = ВыборкаПоСостояниямОХ.Количество;
			ОписаниеКоличества["Дата"] = ВыборкаПоСостояниямОХ.ДатаИзменения;

			ОписаниеОстатковТоваров["Остатки"].Добавить(ОписаниеКоличества);

		КонецЦикла;
		
		РезультатЗапросаСведений["Товары"].Добавить(ОписаниеОстатковТоваров);
	КонецЦикла; 
	
	РезультатЗапросаСведений["Успех"] = Истина;
	
	Возврат РезультатЗапросаСведений;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
Функция ТаблицаПланФактОжидаемоеПоступление(ОжидаемоеПоступление) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОжидаемыеПоступления.Ссылка КАК ОжидаемоеПоступление
	               |ПОМЕСТИТЬ втДокументы
	               |ИЗ
	               |	Документ.ОжидаемоеПоступление КАК ОжидаемыеПоступления
	               |ГДЕ
	               |	ОжидаемыеПоступления.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втДокументы.ОжидаемоеПоступление КАК ОжидаемоеПоступление,
	               |	ОперацииСМестамиХранения.МестоХранения КАК МестоХранения,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА ОперацииСМестамиХранения.ТипОперации = ЗНАЧЕНИЕ(Справочник.ТипыОпераций.МаркировкаМестХранения)
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ ЛОЖЬ
	               |		КОНЕЦ) КАК Промаркирован,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА ОперацииСМестамиХранения.ТипОперации = ЗНАЧЕНИЕ(Справочник.ТипыОпераций.КонтрольПоступленияПоСоставу)
	               |					ИЛИ ОперацииСМестамиХранения.ТипОперации = ЗНАЧЕНИЕ(Справочник.ТипыОпераций.СвободныйКонтрольПоступленияПоСоставу)
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ ЛОЖЬ
	               |		КОНЕЦ) КАК Проконтролирован,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА ОперацииСМестамиХранения.ТипОперации = ЗНАЧЕНИЕ(Справочник.ТипыОпераций.Размещение)
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ ЛОЖЬ
	               |		КОНЕЦ) КАК Размещен
	               |ПОМЕСТИТЬ втСостояниеМХ
	               |ИЗ
	               |	втДокументы КАК втДокументы
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОперацииСМестамиХранения КАК ОперацииСМестамиХранения
	               |		ПО втДокументы.ОжидаемоеПоступление = ОперацииСМестамиХранения.ДокументОснование
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	втДокументы.ОжидаемоеПоступление,
	               |	ОперацииСМестамиХранения.МестоХранения
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПланФакт.ОжидаемоеПоступление КАК ОжидаемоеПоступление,
	               |	ПланФакт.ОбъектХранения КАК ОбъектХранения,
	               |	ПланФакт.Состояние КАК Состояние,
	               |	ПланФакт.Партия КАК Партия,
	               |	ПланФакт.КонфигурацияУпаковок КАК КонфигурацияУпаковок,
	               |	ПланФакт.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,
	               |	СУММА(ПланФакт.Возврат) КАК Возврат,
	               |	СУММА(ПланФакт.Факт) КАК Факт,
	               |	СУММА(ПланФакт.ФактМерный) КАК ФактМерный,
	               |	СУММА(ПланФакт.План) КАК План,
	               |	СУММА(ПланФакт.ПланНачальный) КАК ПланНачальный,
	               |	СУММА(ПланФакт.ПланМакс) КАК ПланМакс,
	               |	СУММА(ПланФакт.ПланМин) КАК ПланМин,
	               |	СУММА(ПланФакт.Проконтролировано) КАК Проконтролировано,
	               |	СУММА(ПланФакт.Промаркировано) КАК Промаркировано,
	               |	СУММА(ПланФакт.Размещено) КАК Размещено,
	               |	ПланФакт.ОбъектХранения.Номенклатура.Наименование КАК НоменклатураНаименование,
	               |	ПланФакт.ОбъектХранения.Номенклатура.Артикул КАК НоменклатураАртикул,
	               |	ПланФакт.ОбъектХранения.Номенклатура КАК Номенклатура
	               |ПОМЕСТИТЬ втПланФакт
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ПланФактПоступления.ОжидаемоеПоступление КАК ОжидаемоеПоступление,
	               |		ПланФактПоступления.ОбъектХранения КАК ОбъектХранения,
	               |		ПланФактПоступления.Состояние КАК Состояние,
	               |		ПланФактПоступления.Партия КАК Партия,
	               |		ПланФактПоступления.КонфигурацияУпаковок КАК КонфигурацияУпаковок,
	               |		ПланФактПоступления.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,
	               |		ПланФактПоступления.Возврат КАК Возврат,
	               |		ПланФактПоступления.Факт КАК Факт,
	               |		ПланФактПоступления.ФактМерный КАК ФактМерный,
	               |		ПланФактПоступления.План КАК План,
	               |		ПланФактПоступления.ПланНачальный КАК ПланНачальный,
	               |		ПланФактПоступления.ПланМакс КАК ПланМакс,
	               |		ПланФактПоступления.ПланМин КАК ПланМин,
	               |		ВЫБОР
	               |			КОГДА ЕСТЬNULL(втСостояниеМХ.Проконтролирован, ЛОЖЬ)
	               |				ТОГДА ПланФактПоступления.Факт
	               |			ИНАЧЕ 0
	               |		КОНЕЦ КАК Проконтролировано,
	               |		ВЫБОР
	               |			КОГДА ЕСТЬNULL(втСостояниеМХ.Промаркирован, ЛОЖЬ)
	               |				ТОГДА ПланФактПоступления.Факт
	               |			ИНАЧЕ 0
	               |		КОНЕЦ КАК Промаркировано,
	               |		ВЫБОР
	               |			КОГДА ЕСТЬNULL(втСостояниеМХ.Размещен, ЛОЖЬ)
	               |				ТОГДА ПланФактПоступления.Факт
	               |			ИНАЧЕ 0
	               |		КОНЕЦ КАК Размещено
	               |	ИЗ
	               |		втДокументы КАК втДокументы
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПланФактПоступленияДвижения КАК ПланФактПоступления
	               |				ЛЕВОЕ СОЕДИНЕНИЕ втСостояниеМХ КАК втСостояниеМХ
	               |				ПО ПланФактПоступления.МестоХранения = втСостояниеМХ.МестоХранения
	               |			ПО втДокументы.ОжидаемоеПоступление = ПланФактПоступления.ОжидаемоеПоступление) КАК ПланФакт
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПланФакт.ОжидаемоеПоступление,
	               |	ПланФакт.ОбъектХранения,
	               |	ПланФакт.Состояние,
	               |	ПланФакт.Партия,
	               |	ПланФакт.КонфигурацияУпаковок,
	               |	ПланФакт.ЗаказНаОтгрузку,
	               |	ПланФакт.ОбъектХранения.Номенклатура.Наименование,
	               |	ПланФакт.ОбъектХранения.Номенклатура.Артикул,
	               |	ПланФакт.ОбъектХранения.Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПланПоступления.ОжидаемоеПоступление КАК ОжидаемоеПоступление,
	               |	ПланПоступления.ОбъектХранения КАК ОбъектХранения,
	               |	ПланПоступления.Состояние КАК Состояние,
	               |	ПланПоступления.Партия КАК Партия,
	               |	ПланПоступления.КонфигурацияУпаковок КАК КонфигурацияУпаковок,
	               |	ПланПоступления.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,
	               |	ПланПоступления.Возврат КАК Возврат,
	               |	ПланПоступления.Факт КАК Факт,
	               |	ПланПоступления.План КАК План,
	               |	ПланПоступления.ПланНачальный КАК ПланНачальный,
	               |	ПланПоступления.План - ПланПоступления.ПланНачальный КАК Скорректировано,
	               |	ВЫБОР
	               |		КОГДА ПланПоступления.Факт >= ПланПоступления.ПланМин
	               |			ТОГДА 0
	               |		ИНАЧЕ ПланПоступления.План - ПланПоступления.Факт
	               |	КОНЕЦ КАК ОсталосьПринять,
	               |	ВЫБОР
	               |		КОГДА ПланПоступления.Факт >= ПланПоступления.ПланМакс
	               |			ТОГДА ПланПоступления.Факт - ПланПоступления.План
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК Излишек,
	               |	ПланПоступления.Возврат / ЕСТЬNULL(ПланПоступления.ОбъектХранения.УпаковкаДляОтчетов.Коэффициент, 1) КАК ВозвратУпаковок,
	               |	ПланПоступления.Факт / ЕСТЬNULL(ПланПоступления.ОбъектХранения.УпаковкаДляОтчетов.Коэффициент, 1) КАК ФактУпаковок,
	               |	ПланПоступления.План / ЕСТЬNULL(ПланПоступления.ОбъектХранения.УпаковкаДляОтчетов.Коэффициент, 1) КАК ПланУпаковок,
	               |	ПланПоступления.Проконтролировано / ЕСТЬNULL(ПланПоступления.ОбъектХранения.УпаковкаДляОтчетов.Коэффициент, 1) КАК ПроконтролированоУпаковок,
	               |	ПланПоступления.Промаркировано / ЕСТЬNULL(ПланПоступления.ОбъектХранения.УпаковкаДляОтчетов.Коэффициент, 1) КАК ПромаркированоУпаковок,
	               |	ПланПоступления.Размещено / ЕСТЬNULL(ПланПоступления.ОбъектХранения.УпаковкаДляОтчетов.Коэффициент, 1) КАК РазмещеноУпаковок,
	               |	ПланПоступления.ФактМерный КАК ФактМерный,
	               |	ПланПоступления.Проконтролировано КАК Проконтролировано,
	               |	ПланПоступления.Промаркировано КАК Промаркировано,
	               |	ПланПоступления.Размещено КАК Размещено,
	               |	ПланПоступления.ПланНачальный / ЕСТЬNULL(ПланПоступления.ОбъектХранения.УпаковкаДляОтчетов.Коэффициент, 1) КАК ПланНачальныйУпаковок,
	               |	(ПланПоступления.План - ПланПоступления.ПланНачальный) / ЕСТЬNULL(ПланПоступления.ОбъектХранения.УпаковкаДляОтчетов.Коэффициент, 1) КАК СкорректированоУпаковок,
	               |	ВЫБОР
	               |		КОГДА ПланПоступления.Факт >= ПланПоступления.ПланМин
	               |			ТОГДА 0
	               |		ИНАЧЕ ПланПоступления.План - ПланПоступления.Факт
	               |	КОНЕЦ / ЕСТЬNULL(ПланПоступления.ОбъектХранения.УпаковкаДляОтчетов.Коэффициент, 1) КАК ОсталосьПринятьУпаковок,
	               |	ВЫБОР
	               |		КОГДА ПланПоступления.Факт >= ПланПоступления.ПланМакс
	               |			ТОГДА ПланПоступления.Факт - ПланПоступления.План
	               |		ИНАЧЕ 0
	               |	КОНЕЦ / ЕСТЬNULL(ПланПоступления.ОбъектХранения.УпаковкаДляОтчетов.Коэффициент, 1) КАК ИзлишекУпаковок,
	               |	ПланПоступления.ПланМин КАК ПланМин,
	               |	ПланПоступления.ПланМакс КАК ПланМакс,
	               |	ПланПоступления.НоменклатураНаименование КАК НоменклатураНаименование,
	               |	ПланПоступления.НоменклатураАртикул КАК НоменклатураАртикул,
	               |	ПланПоступления.Номенклатура КАК Номенклатура,
	               |	дсфСоответствиеСостоянийОбъектовХраненияКодамЯндексМаркет.СтатусЕдиницыТовара КАК СтатусЕдиницыТовара,
	               |	дсфСоответствиеСостоянийОбъектовХраненияКодамЯндексМаркет.ТипСтока КАК ТипСтока
	               |ИЗ
	               |	втПланФакт КАК ПланПоступления
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.дсфСоответствиеСостоянийОбъектовХраненияКодамЯндексМаркет КАК дсфСоответствиеСостоянийОбъектовХраненияКодамЯндексМаркет
	               |		ПО ПланПоступления.Состояние = дсфСоответствиеСостоянийОбъектовХраненияКодамЯндексМаркет.СостояниеОбъектовХранения";
	
	Запрос.УстановитьПараметр("Ссылка", ОжидаемоеПоступление);
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Выгрузить();

КонецФункции

Функция ТаблицаПланФактЗаказНаОтгрузку(ЗаказНаОтгрузку) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказыНаОтгрузку.Ссылка КАК ЗаказНаОтгрузку,
	               |	ЕСТЬNULL(ЗаказыНаОтгрузку.Процесс.ЗонаГотовыхЗаказов, ЗНАЧЕНИЕ(Справочник.ЗоныСклада.ПустаяСсылка)) КАК ЗонаГотовыхЗаказов,
	               |	ЕСТЬNULL(ЗаказыНаОтгрузку.Процесс.ЗонаОтгрузки, ЗНАЧЕНИЕ(Справочник.ЗоныСклада.ПустаяСсылка)) КАК ЗонаОтгрузки
	               |ПОМЕСТИТЬ втДокументы
	               |ИЗ
	               |	Документ.ЗаказНаОтгрузку КАК ЗаказыНаОтгрузку
	               |ГДЕ
	               |	ЗаказыНаОтгрузку.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	втДокументы.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,
	               |	ИерархияЗон.Зона КАК Зона
	               |ПОМЕСТИТЬ втЗоныГотовыхЗаказов
	               |ИЗ
	               |	втДокументы КАК втДокументы
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИерархияЗон КАК ИерархияЗон
	               |		ПО втДокументы.ЗонаГотовыхЗаказов = ИерархияЗон.Родитель
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	втДокументы.ЗаказНаОтгрузку,
	               |	ИерархияЗон.Зона
	               |ИЗ
	               |	втДокументы КАК втДокументы
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИерархияЗон КАК ИерархияЗон
	               |		ПО втДокументы.ЗонаОтгрузки = ИерархияЗон.Родитель
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втДокументы.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,
	               |	МестоположениеМестХранения.МестоХранения КАК МестоХранения,
	               |	МестоположениеМестХранения.Зона КАК Зона,
	               |	МестоположениеМестХранения.МестоХранения1.Тип КАК ТипМХ1
	               |ПОМЕСТИТЬ втМХВРезерве
	               |ИЗ
	               |	втДокументы КАК втДокументы
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МестоположениеМестХранения КАК МестоположениеМестХранения
	               |		ПО втДокументы.ЗаказНаОтгрузку = МестоположениеМестХранения.ДокументРезерва
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втМХВРезерве.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,
	               |	втМХВРезерве.МестоХранения КАК МестоХранения,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА ОперацииСМестамиХранения.ТипОперации = ЗНАЧЕНИЕ(Справочник.ТипыОпераций.КонтрольОтгрузкиПоМестам)
	               |					ИЛИ ОперацииСМестамиХранения.ТипОперации = ЗНАЧЕНИЕ(Справочник.ТипыОпераций.КонтрольОтгрузкиПоСоставу)
	               |					ИЛИ ОперацииСМестамиХранения.ТипОперации = ЗНАЧЕНИЕ(Справочник.ТипыОпераций.СвободныйКонтрольОтгрузкиПоМестам)
	               |					ИЛИ ОперацииСМестамиХранения.ТипОперации = ЗНАЧЕНИЕ(Справочник.ТипыОпераций.СвободныйКонтрольОтгрузкиПоСоставу)
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ ЛОЖЬ
	               |		КОНЕЦ) КАК Проконтролировано,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА ОперацииСМестамиХранения.ТипОперации = ЗНАЧЕНИЕ(Справочник.ТипыОпераций.МаркировкаМестХранения)
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ ЛОЖЬ
	               |		КОНЕЦ) КАК Промаркирован,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА ОперацииСМестамиХранения.ТипОперации = ЗНАЧЕНИЕ(Справочник.ТипыОпераций.Упаковка)
	               |					ИЛИ ОперацииСМестамиХранения.ТипОперации = ЗНАЧЕНИЕ(Справочник.ТипыОпераций.СвободнаяУпаковка)
	               |					ИЛИ ОперацииСМестамиХранения.Состояние = ЗНАЧЕНИЕ(Справочник.СостоянияМестХранения.Упаковано)
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ ЛОЖЬ
	               |		КОНЕЦ) КАК Упаковано,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА ОперацииСМестамиХранения.ТипОперации = ЗНАЧЕНИЕ(Справочник.ТипыОпераций.Консолидация)
	               |					ИЛИ НЕ втЗоныГотовыхЗаказов.Зона ЕСТЬ NULL
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ ЛОЖЬ
	               |		КОНЕЦ) КАК ГотовКОтгрузке,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА ЕСТЬNULL(ОперацииСМестамиХранения.ТипОперации, ЗНАЧЕНИЕ(Справочник.ТипыОпераций.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ТипыОпераций.Отгрузка)
	               |					ИЛИ ЕСТЬNULL(ОперацииСМестамиХранения.ТипОперации, ЗНАЧЕНИЕ(Справочник.ТипыОпераций.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ТипыОпераций.СвободнаяОтгрузка)
	               |					ИЛИ втМХВРезерве.ТипМХ1 = ЗНАЧЕНИЕ(Справочник.ТипыМестХранения.ТранспортноеСредство)
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ ЛОЖЬ
	               |		КОНЕЦ) КАК Отгружен
	               |ПОМЕСТИТЬ втСостояниеМХ
	               |ИЗ
	               |	втМХВРезерве КАК втМХВРезерве
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОперацииСМестамиХранения КАК ОперацииСМестамиХранения
	               |		ПО втМХВРезерве.ЗаказНаОтгрузку = ОперацииСМестамиХранения.ДокументОснование
	               |			И втМХВРезерве.МестоХранения = ОперацииСМестамиХранения.МестоХранения
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втЗоныГотовыхЗаказов КАК втЗоныГотовыхЗаказов
	               |		ПО втМХВРезерве.Зона = втЗоныГотовыхЗаказов.Зона
	               |			И втМХВРезерве.ЗаказНаОтгрузку = втЗоныГотовыхЗаказов.ЗаказНаОтгрузку
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	втМХВРезерве.ЗаказНаОтгрузку,
	               |	втМХВРезерве.МестоХранения
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПланФакт.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,
	               |	ПланФакт.ОбъектХранения КАК ОбъектХранения,
	               |	ПланФакт.Состояние КАК Состояние,
	               |	ПланФакт.Партия КАК Партия,
	               |	ПланФакт.КонфигурацияУпаковок КАК КонфигурацияУпаковок,
	               |	СУММА(ПланФакт.Возврат) КАК Возврат,
	               |	СУММА(ПланФакт.Факт) КАК Факт,
	               |	СУММА(ПланФакт.ФактМерный) КАК ФактМерный,
	               |	СУММА(ПланФакт.Перенесено) КАК Перенесено,
	               |	СУММА(ПланФакт.Спланировано) КАК Спланировано,
	               |	СУММА(ПланФакт.План) КАК План,
	               |	СУММА(ПланФакт.ПланНачальный) КАК ПланНачальный,
	               |	СУММА(ПланФакт.Зарезервировано) КАК Зарезервировано,
	               |	СУММА(ПланФакт.ПланМакс) КАК ПланМакс,
	               |	СУММА(ПланФакт.ПланМин) КАК ПланМин,
	               |	ПланФакт.СрокГодности КАК СрокГодности,
	               |	ПланФакт.НомерПартии КАК НомерПартии,
	               |	СУММА(ПланФакт.Проконтролировано) КАК Проконтролировано,
	               |	СУММА(ПланФакт.Промаркировано) КАК Промаркировано,
	               |	СУММА(ПланФакт.Упаковано) КАК Упаковано,
	               |	СУММА(ПланФакт.ГотовоКОтгрузке) КАК ГотовоКОтгрузке,
	               |	СУММА(ПланФакт.ПланСборки) КАК ПланСборки,
	               |	СУММА(ПланФакт.Отгружено) КАК Отгружено,
	               |	ПланФакт.ОбъектХранения.Номенклатура.Наименование КАК НоменклатураНаименование,
	               |	ПланФакт.ОбъектХранения.Номенклатура.Артикул КАК НоменклатураАртикул,
	               |	ПланФакт.ОбъектХранения.Номенклатура КАК Номенклатура
	               |ПОМЕСТИТЬ втПланФакт
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ПланОтгрузки.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,
	               |		ПланОтгрузки.ОбъектХранения КАК ОбъектХранения,
	               |		ПланОтгрузки.Состояние КАК Состояние,
	               |		ПланОтгрузки.Партия КАК Партия,
	               |		ПланОтгрузки.КонфигурацияУпаковок КАК КонфигурацияУпаковок,
	               |		ПланОтгрузки.Возврат КАК Возврат,
	               |		ПланОтгрузки.Факт КАК Факт,
	               |		ПланОтгрузки.ФактМерный КАК ФактМерный,
	               |		ПланОтгрузки.Перенесено КАК Перенесено,
	               |		ПланОтгрузки.Спланировано КАК Спланировано,
	               |		ПланОтгрузки.План КАК План,
	               |		ПланОтгрузки.ПланНачальный КАК ПланНачальный,
	               |		0 КАК Зарезервировано,
	               |		ПланОтгрузки.ПланМакс КАК ПланМакс,
	               |		ПланОтгрузки.ПланМин КАК ПланМин,
	               |		ПланОтгрузки.СрокГодности КАК СрокГодности,
	               |		ПланОтгрузки.НомерПартии КАК НомерПартии,
	               |		0 КАК Проконтролировано,
	               |		0 КАК Промаркировано,
	               |		0 КАК Упаковано,
	               |		0 КАК ГотовоКОтгрузке,
	               |		0 КАК Отгружено,
	               |		0 КАК ПланСборки
	               |	ИЗ
	               |		втДокументы КАК втДокументы
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПланФактОтгрузки КАК ПланОтгрузки
	               |			ПО втДокументы.ЗаказНаОтгрузку = ПланОтгрузки.ЗаказНаОтгрузку
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		втДокументы.ЗаказНаОтгрузку,
	               |		ПланФактКомплектации.ОбъектХранения,
	               |		ПланФактКомплектации.Состояние,
	               |		ПланФактКомплектации.Партия,
	               |		ПланФактКомплектации.КонфигурацияУпаковок,
	               |		0,
	               |		0,
	               |		0,
	               |		0,
	               |		0,
	               |		0,
	               |		0,
	               |		0,
	               |		0,
	               |		0,
	               |		ЕСТЬNULL(ПланФактКомплектации.Партия.СрокГодности, ДАТАВРЕМЯ(1, 1, 1)),
	               |		ЕСТЬNULL(ПланФактКомплектации.Партия.Код, """"),
	               |		0,
	               |		0,
	               |		0,
	               |		0,
	               |		0,
	               |		ПланФактКомплектации.План - ПланФактКомплектации.Факт
	               |	ИЗ
	               |		втДокументы КАК втДокументы
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаКомплектацию КАК ДокументЗаказНаКомплектацию
	               |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПланФактКомплектации КАК ПланФактКомплектации
	               |				ПО ДокументЗаказНаКомплектацию.Ссылка = ПланФактКомплектации.ЗаказНаКомплектацию
	               |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументов КАК СтатусыДокументов
	               |				ПО ДокументЗаказНаКомплектацию.Ссылка = СтатусыДокументов.Документ
	               |			ПО втДокументы.ЗаказНаОтгрузку = ДокументЗаказНаКомплектацию.ЗаказНаОтгрузку
	               |	ГДЕ
	               |		ДокументЗаказНаКомплектацию.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказовНаКомплектацию.Сборка)
	               |		И ПланФактКомплектации.ТипСтроки = ЗНАЧЕНИЕ(Перечисление.ТипыСтрокКомплектации.Приход)
	               |		И СтатусыДокументов.Статус <> ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.Завершен)
	               |		И СтатусыДокументов.Статус <> ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.Отменен)
	               |		И СтатусыДокументов.Статус <> ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.Новый)
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		МестоположениеМестХраненияТ.ДокументРезерва,
	               |		ОстаткиТ.ОбъектХранения,
	               |		ОстаткиТ.Состояние,
	               |		ОстаткиТ.Партия,
	               |		ОстаткиТ.КонфигурацияУпаковок,
	               |		0,
	               |		0,
	               |		0,
	               |		0,
	               |		0,
	               |		0,
	               |		0,
	               |		ОстаткиТ.Количество,
	               |		0,
	               |		0,
	               |		ЕСТЬNULL(ОстаткиТ.Партия.СрокГодности, ДАТАВРЕМЯ(1, 1, 1)),
	               |		ЕСТЬNULL(ОстаткиТ.Партия.Код, """"),
	               |		ВЫБОР
	               |			КОГДА ЕСТЬNULL(втСостояниеМХ.Проконтролировано, ЛОЖЬ)
	               |				ТОГДА ОстаткиТ.Количество
	               |			ИНАЧЕ 0
	               |		КОНЕЦ,
	               |		ВЫБОР
	               |			КОГДА ЕСТЬNULL(втСостояниеМХ.Промаркирован, ЛОЖЬ)
	               |				ТОГДА ОстаткиТ.Количество
	               |			ИНАЧЕ 0
	               |		КОНЕЦ,
	               |		ВЫБОР
	               |			КОГДА ЕСТЬNULL(втСостояниеМХ.Упаковано, ЛОЖЬ)
	               |				ТОГДА ОстаткиТ.Количество
	               |			ИНАЧЕ 0
	               |		КОНЕЦ,
	               |		ВЫБОР
	               |			КОГДА ЕСТЬNULL(втСостояниеМХ.ГотовКОтгрузке, ЛОЖЬ)
	               |				ТОГДА ОстаткиТ.Количество
	               |			ИНАЧЕ 0
	               |		КОНЕЦ,
	               |		ВЫБОР
	               |			КОГДА ЕСТЬNULL(втСостояниеМХ.Отгружен, ЛОЖЬ)
	               |				ТОГДА ОстаткиТ.Количество
	               |			ИНАЧЕ 0
	               |		КОНЕЦ,
	               |		0
	               |	ИЗ
	               |		втДокументы КАК втДокументы
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МестоположениеМестХранения КАК МестоположениеМестХраненияТ
	               |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Остатки КАК ОстаткиТ
	               |				ПО МестоположениеМестХраненияТ.МестоХранения = ОстаткиТ.МестоХранения
	               |				ЛЕВОЕ СОЕДИНЕНИЕ втСостояниеМХ КАК втСостояниеМХ
	               |				ПО МестоположениеМестХраненияТ.МестоХранения = втСостояниеМХ.МестоХранения
	               |					И МестоположениеМестХраненияТ.ДокументРезерва = втСостояниеМХ.ЗаказНаОтгрузку
	               |			ПО втДокументы.ЗаказНаОтгрузку = МестоположениеМестХраненияТ.ДокументРезерва) КАК ПланФакт
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПланФакт.ЗаказНаОтгрузку,
	               |	ПланФакт.ОбъектХранения,
	               |	ПланФакт.Состояние,
	               |	ПланФакт.Партия,
	               |	ПланФакт.КонфигурацияУпаковок,
	               |	ПланФакт.СрокГодности,
	               |	ПланФакт.НомерПартии,
	               |	ПланФакт.ОбъектХранения.Номенклатура.Наименование,
	               |	ПланФакт.ОбъектХранения.Номенклатура.Артикул
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПланФакт.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,
	               |	ПланФакт.ОбъектХранения КАК ОбъектХранения,
	               |	ПланФакт.Состояние КАК Состояние,
	               |	ПланФакт.Партия КАК Партия,
	               |	ПланФакт.КонфигурацияУпаковок КАК КонфигурацияУпаковок,
	               |	ПланФакт.Возврат КАК Возврат,
	               |	ПланФакт.Факт КАК Факт,
	               |	ПланФакт.ФактМерный КАК ФактМерный,
	               |	ПланФакт.Перенесено КАК Перенесено,
	               |	ПланФакт.Спланировано КАК Спланировано,
	               |	ПланФакт.План КАК План,
	               |	ПланФакт.ПланСборки КАК ПланСборки,
	               |	ПланФакт.ПланНачальный КАК ПланНачальный,
	               |	ПланФакт.Зарезервировано КАК Зарезервировано,
	               |	ПланФакт.План - ПланФакт.ПланНачальный КАК Скорректировано,
	               |	ВЫБОР
	               |		КОГДА ПланФакт.Спланировано + ПланФакт.Зарезервировано + ПланФакт.Факт >= ПланФакт.ПланМин
	               |			ТОГДА 0
	               |		ИНАЧЕ ПланФакт.План - ПланФакт.Спланировано - ПланФакт.Зарезервировано - ПланФакт.Факт
	               |	КОНЕЦ КАК ОсталосьСпланировать,
	               |	ВЫБОР
	               |		КОГДА ПланФакт.Зарезервировано + ПланФакт.Факт >= ПланФакт.ПланМин
	               |			ТОГДА 0
	               |		ИНАЧЕ ПланФакт.План - ПланФакт.Зарезервировано - ПланФакт.Факт
	               |	КОНЕЦ КАК ОсталосьЗарезервировать,
	               |	ВЫБОР
	               |		КОГДА ПланФакт.Факт >= ПланФакт.ПланМин
	               |			ТОГДА 0
	               |		ИНАЧЕ ПланФакт.План - ПланФакт.Факт
	               |	КОНЕЦ КАК ОсталосьОтгрузить,
	               |	ВЫБОР
	               |		КОГДА ПланФакт.Спланировано + ПланФакт.Зарезервировано + ПланФакт.Факт >= ПланФакт.ПланМакс
	               |			ТОГДА ПланФакт.Спланировано + ПланФакт.Зарезервировано + ПланФакт.Факт - ПланФакт.План
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК Излишек,
	               |	ПланФакт.Возврат / ЕСТЬNULL(ПланФакт.ОбъектХранения.УпаковкаДляОтчетов.Коэффициент, 1) КАК ВозвратУпаковок,
	               |	ПланФакт.Факт / ЕСТЬNULL(ПланФакт.ОбъектХранения.УпаковкаДляОтчетов.Коэффициент, 1) КАК ФактУпаковок,
	               |	ПланФакт.Перенесено / ЕСТЬNULL(ПланФакт.ОбъектХранения.УпаковкаДляОтчетов.Коэффициент, 1) КАК ПеренесеноУпаковок,
	               |	ПланФакт.Спланировано / ЕСТЬNULL(ПланФакт.ОбъектХранения.УпаковкаДляОтчетов.Коэффициент, 1) КАК СпланированоУпаковок,
	               |	ПланФакт.План / ЕСТЬNULL(ПланФакт.ОбъектХранения.УпаковкаДляОтчетов.Коэффициент, 1) КАК ПланУпаковок,
	               |	ПланФакт.ПланСборки / ЕСТЬNULL(ПланФакт.ОбъектХранения.УпаковкаДляОтчетов.Коэффициент, 1) КАК ПланСборкиУпаковок,
	               |	ПланФакт.ПланНачальный / ЕСТЬNULL(ПланФакт.ОбъектХранения.УпаковкаДляОтчетов.Коэффициент, 1) КАК ПланНачальныйУпаковок,
	               |	ПланФакт.Зарезервировано / ЕСТЬNULL(ПланФакт.ОбъектХранения.УпаковкаДляОтчетов.Коэффициент, 1) КАК ЗарезервированоУпаковок,
	               |	(ПланФакт.План - ПланФакт.ПланНачальный) / ЕСТЬNULL(ПланФакт.ОбъектХранения.УпаковкаДляОтчетов.Коэффициент, 1) КАК СкорректированоУпаковок,
	               |	ВЫБОР
	               |		КОГДА ПланФакт.Спланировано + ПланФакт.Зарезервировано + ПланФакт.Факт >= ПланФакт.ПланМин
	               |			ТОГДА 0
	               |		ИНАЧЕ ПланФакт.План - ПланФакт.Спланировано - ПланФакт.Зарезервировано - ПланФакт.Факт
	               |	КОНЕЦ / ЕСТЬNULL(ПланФакт.ОбъектХранения.УпаковкаДляОтчетов.Коэффициент, 1) КАК ОсталосьСпланироватьУпаковок,
	               |	ВЫБОР
	               |		КОГДА ПланФакт.Зарезервировано + ПланФакт.Факт >= ПланФакт.ПланМин
	               |			ТОГДА 0
	               |		ИНАЧЕ ПланФакт.План - ПланФакт.Зарезервировано - ПланФакт.Факт
	               |	КОНЕЦ / ЕСТЬNULL(ПланФакт.ОбъектХранения.УпаковкаДляОтчетов.Коэффициент, 1) КАК ОсталосьЗарезервироватьУпаковок,
	               |	ВЫБОР
	               |		КОГДА ПланФакт.Факт >= ПланФакт.ПланМин
	               |			ТОГДА 0
	               |		ИНАЧЕ ПланФакт.План - ПланФакт.Факт
	               |	КОНЕЦ / ЕСТЬNULL(ПланФакт.ОбъектХранения.УпаковкаДляОтчетов.Коэффициент, 1) КАК ОсталосьОтгрузитьУпаковок,
	               |	ВЫБОР
	               |		КОГДА ПланФакт.Спланировано + ПланФакт.Зарезервировано + ПланФакт.Факт >= ПланФакт.ПланМакс
	               |			ТОГДА ПланФакт.Спланировано + ПланФакт.Зарезервировано + ПланФакт.Факт - ПланФакт.План
	               |		ИНАЧЕ 0
	               |	КОНЕЦ / ЕСТЬNULL(ПланФакт.ОбъектХранения.УпаковкаДляОтчетов.Коэффициент, 1) КАК ИзлишекУпаковок,
	               |	ПланФакт.ПланМакс КАК ПланМакс,
	               |	ПланФакт.ПланМин КАК ПланМин,
	               |	ПланФакт.СрокГодности КАК СрокГодности,
	               |	ПланФакт.НомерПартии КАК НомерПартии,
	               |	ПланФакт.Проконтролировано / ЕСТЬNULL(ПланФакт.ОбъектХранения.УпаковкаДляОтчетов.Коэффициент, 1) КАК ПроконтролированоУпаковок,
	               |	ПланФакт.Промаркировано / ЕСТЬNULL(ПланФакт.ОбъектХранения.УпаковкаДляОтчетов.Коэффициент, 1) КАК ПромаркированоУпаковок,
	               |	ПланФакт.Упаковано / ЕСТЬNULL(ПланФакт.ОбъектХранения.УпаковкаДляОтчетов.Коэффициент, 1) КАК УпакованоУпаковок,
	               |	ПланФакт.ГотовоКОтгрузке / ЕСТЬNULL(ПланФакт.ОбъектХранения.УпаковкаДляОтчетов.Коэффициент, 1) КАК ГотовоКОтгрузкеУпаковок,
	               |	ПланФакт.Отгружено / ЕСТЬNULL(ПланФакт.ОбъектХранения.УпаковкаДляОтчетов.Коэффициент, 1) КАК ОтгруженоУпаковок,
	               |	ПланФакт.Проконтролировано КАК Проконтролировано,
	               |	ПланФакт.Промаркировано КАК Промаркировано,
	               |	ПланФакт.Упаковано КАК Упаковано,
	               |	ПланФакт.ГотовоКОтгрузке КАК ГотовоКОтгрузке,
	               |	ПланФакт.Отгружено КАК Отгружено,
	               |	дсфСоответствиеСостоянийОбъектовХраненияКодамЯндексМаркет.СтатусЕдиницыТовара КАК СтатусЕдиницыТовара,
	               |	дсфСоответствиеСостоянийОбъектовХраненияКодамЯндексМаркет.ТипСтока КАК ТипСтока,
	               |	ПланФакт.НоменклатураНаименование КАК НоменклатураНаименование,
	               |	ПланФакт.НоменклатураАртикул КАК НоменклатураАртикул,
	               |	ПланФакт.Номенклатура КАК Номенклатура
	               |ИЗ
	               |	втПланФакт КАК ПланФакт
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.дсфСоответствиеСостоянийОбъектовХраненияКодамЯндексМаркет КАК дсфСоответствиеСостоянийОбъектовХраненияКодамЯндексМаркет
	               |		ПО ПланФакт.Состояние = дсфСоответствиеСостоянийОбъектовХраненияКодамЯндексМаркет.СостояниеОбъектовХранения";
		
	Запрос.УстановитьПараметр("Ссылка", ЗаказНаОтгрузку);
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Выгрузить();

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Код процедур и функций
#КонецОбласти