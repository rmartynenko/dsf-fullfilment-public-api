////////////////////////////////////////////////////////////////////////////////
// 
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс 

// Находит все подсистемы конфигурации, не включенные в командный интерфейс,
//	после чего включает такие подсистемы в возвращаемое соответствие.
//
// Возвращаемое значение:
//	Соответствие - соответствие вида (<Имя найденной подсистемы>, Истина), где в качестве имени найденной подсистемы
//				   подставляется строка с ее именем из метаданных.					
//
Функция ИменаПодсистем() Экспорт
	
	Имена = Новый Соответствие;
	ВставитьИменаПодчиненныхПодсистем(Имена, Метаданные, Истина);
	
	Возврат Новый ФиксированноеСоответствие(Имена);
	
КонецФункции

// Возвращает Истина, если "функциональная" подсистема существует в конфигурации.
//  Предназначена для реализации вызова необязательной подсистемы (условного вызова).
//  У "функциональной" подсистемы снят флажок "Включать в командный интерфейс".
//
// Параметры:
//  ПолноеИмяПодсистемы	 - Строка	 - полное имя объекта метаданных подсистема
//  	без слов "Подсистема." и с учетом регистра символов.
//  	Например: "СтандартныеПодсистемы.ВариантыОтчетов".
// 
// Возвращаемое значение:
//  Булево - Наличие подсистемы.
//
Функция ПодсистемаСуществует(ПолноеИмяПодсистемы) Экспорт
	
	ИменаПодсистем = дсфОбщегоНазначенияВызовСервераПовтИсп.ИменаПодсистем();
	Возврат ИменаПодсистем.Получить(ПолноеИмяПодсистемы) <> Неопределено;
	
КонецФункции

// Функция возвращает установленную версию Библиотеки стандартных подсистем.
// 
// Возвращаемое значение:
//  Число
//
Функция ВерсияБСП() Экспорт
	
	ВерсияБСП = "0";
	Метаданные.Подсистемы.Найти("БазоваяФункциональность");
	// Подсистема СтандартныеПодсистемы.БазоваяФункциональность 
	СтандартныеПодсистемы = Метаданные.Подсистемы.Найти("СтандартныеПодсистемы");
	Если СтандартныеПодсистемы <> Неопределено И СтандартныеПодсистемы.Подсистемы.Найти("БазоваяФункциональность") <> Неопределено Тогда
		ОбщийМодуль = ОбщегоНазначения.ОбщийМодуль("СтандартныеПодсистемыСервер");
		ВерсияБСП = ОбщийМодуль.ВерсияБиблиотеки();
	КонецЕсли; 
	
	ВерсияБСП = СтрЗаменить(ВерсияБСП,".","");
	ВерсияБСП = ?(СтрДлина(ВерсияБСП) = 4,ВерсияБСП + "0",ВерсияБСП);
	ВерсияБСП = Число(ВерсияБСП);
	
	Возврат ВерсияБСП;
КонецФункции

Процедура ВставитьИменаПодчиненныхПодсистем(Имена, РодительскаяПодсистема, Все = Ложь, ИмяРодительскойПодсистемы = "")
	
	Для каждого ТекущаяПодсистема Из РодительскаяПодсистема.Подсистемы Цикл
		
		Если ТекущаяПодсистема.ВключатьВКомандныйИнтерфейс И Не Все Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяТекущейПодсистемы = ИмяРодительскойПодсистемы + ТекущаяПодсистема.Имя;
		Имена.Вставить(ИмяТекущейПодсистемы, Истина);
		
		Если ТекущаяПодсистема.Подсистемы.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ВставитьИменаПодчиненныхПодсистем(Имена, ТекущаяПодсистема, Все, ИмяТекущейПодсистемы + ".");
	КонецЦикла;
	
КонецПроцедуры


#КонецОбласти

